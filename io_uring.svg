<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1030" onload="init(evt)" viewBox="0 0 1200 1030" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1013"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1013"> </text>
<g id="frames">
<g>
<title>all (50 samples, 100.00%)</title><rect x="10.0" y="979.0" width="1180.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="13.0" y="990.0">all</text>
</g>
<g>
<title>[IOUringEventLoopGroup-3-1 tid=7773] (39 samples, 78.00%)</title><rect x="10.0" y="963.0" width="920.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="13.0" y="974.0">[IOUringEventLoopGroup-3-1 tid=7773]</text>
</g>
<g>
<title>MessageToMessageEncoder.write (1 samples, 2.00%)</title><rect x="10.0" y="947.0" width="23.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="958.0">M..</text>
</g>
<g>
<title>AbstractChannelHandlerContext.write (1 samples, 2.00%)</title><rect x="10.0" y="931.0" width="23.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="942.0">A..</text>
</g>
<g>
<title>AbstractChannelHandlerContext.invokeWrite (1 samples, 2.00%)</title><rect x="10.0" y="915.0" width="23.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="926.0">A..</text>
</g>
<g>
<title>AbstractChannelHandlerContext.invokeWrite0 (1 samples, 2.00%)</title><rect x="10.0" y="899.0" width="23.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="910.0">A..</text>
</g>
<g>
<title>ChannelOutboundBuffer.progress (1 samples, 2.00%)</title><rect x="10.0" y="883.0" width="23.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="894.0">C..</text>
</g>
<g>
<title>slow_subtype_check Runtime1 stub (1 samples, 2.00%)</title><rect x="10.0" y="867.0" width="23.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="13.0" y="878.0">s..</text>
</g>
<g>
<title>PoolThreadCache$SubPageMemoryRegionCache.initBuf (1 samples, 2.00%)</title><rect x="33.6" y="947.0" width="23.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="36.6" y="958.0">P..</text>
</g>
<g>
<title>AbstractByteBuf.toString (1 samples, 2.00%)</title><rect x="33.6" y="931.0" width="23.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="36.6" y="942.0">A..</text>
</g>
<g>
<title>Thread.run (36 samples, 72.00%)</title><rect x="57.2" y="947.0" width="849.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="60.2" y="958.0">Thread.run</text>
</g>
<g>
<title>FastThreadLocalRunnable.run (36 samples, 72.00%)</title><rect x="57.2" y="931.0" width="849.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="60.2" y="942.0">FastThreadLocalRunnable.run</text>
</g>
<g>
<title>ThreadExecutorMap$2.run (36 samples, 72.00%)</title><rect x="57.2" y="915.0" width="849.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="60.2" y="926.0">ThreadExecutorMap$2.run</text>
</g>
<g>
<title>SingleThreadEventExecutor$4.run (36 samples, 72.00%)</title><rect x="57.2" y="899.0" width="849.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="60.2" y="910.0">SingleThreadEventExecutor$4.run</text>
</g>
<g>
<title>IOUringEventLoop.run (36 samples, 72.00%)</title><rect x="57.2" y="883.0" width="849.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="60.2" y="894.0">IOUringEventLoop.run</text>
</g>
<g>
<title>IOUringCompletionQueue.process (15 samples, 30.00%)</title><rect x="80.8" y="867.0" width="354.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="83.8" y="878.0">IOUringCompletionQueue.process</text>
</g>
<g>
<title>UserData.decode (15 samples, 30.00%)</title><rect x="80.8" y="851.0" width="354.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="83.8" y="862.0">UserData.decode</text>
</g>
<g>
<title>IOUringEventLoop.handle (15 samples, 30.00%)</title><rect x="80.8" y="835.0" width="354.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="83.8" y="846.0">IOUringEventLoop.handle</text>
</g>
<g>
<title>IOUringEventLoop.handlePollAdd (3 samples, 6.00%)</title><rect x="80.8" y="819.0" width="70.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="83.8" y="830.0">IOUringE..</text>
</g>
<g>
<title>AbstractIOUringChannel$AbstractUringUnsafe.pollIn (3 samples, 6.00%)</title><rect x="80.8" y="803.0" width="70.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="83.8" y="814.0">Abstract..</text>
</g>
<g>
<title>AbstractIOUringChannel$AbstractUringUnsafe.scheduleFirstReadIfNeeded (3 samples, 6.00%)</title><rect x="80.8" y="787.0" width="70.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="83.8" y="798.0">Abstract..</text>
</g>
<g>
<title>AbstractIOUringChannel$AbstractUringUnsafe.scheduleFirstRead (3 samples, 6.00%)</title><rect x="80.8" y="771.0" width="70.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="83.8" y="782.0">Abstract..</text>
</g>
<g>
<title>AbstractIOUringChannel$AbstractUringUnsafe.recvBufAllocHandle (1 samples, 2.00%)</title><rect x="80.8" y="755.0" width="23.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="83.8" y="766.0">A..</text>
</g>
<g>
<title>AbstractIOUringChannel$AbstractUringUnsafe.scheduleRead (2 samples, 4.00%)</title><rect x="104.4" y="755.0" width="47.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="107.4" y="766.0">Abst..</text>
</g>
<g>
<title>AbstractIOUringStreamChannel$IOUringStreamUnsafe.scheduleRead0 (2 samples, 4.00%)</title><rect x="104.4" y="739.0" width="47.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="107.4" y="750.0">Abst..</text>
</g>
<g>
<title>IOUringSubmissionQueue.addRead (1 samples, 2.00%)</title><rect x="104.4" y="723.0" width="23.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="107.4" y="734.0">I..</text>
</g>
<g>
<title>IOUringSubmissionQueue.enqueueSqe (1 samples, 2.00%)</title><rect x="104.4" y="707.0" width="23.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="107.4" y="718.0">I..</text>
</g>
<g>
<title>IOUringSubmissionQueue.setData (1 samples, 2.00%)</title><rect x="104.4" y="691.0" width="23.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="107.4" y="702.0">I..</text>
</g>
<g>
<title>JdkLogger.trace (1 samples, 2.00%)</title><rect x="104.4" y="675.0" width="23.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="107.4" y="686.0">J..</text>
</g>
<g>
<title>g1_post_barrier_slow (1 samples, 2.00%)</title><rect x="128.0" y="723.0" width="23.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="131.0" y="734.0">g..</text>
</g>
<g>
<title>IOUringEventLoop.handleRead (10 samples, 20.00%)</title><rect x="151.6" y="819.0" width="236.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="154.6" y="830.0">IOUringEventLoop.handleRead</text>
</g>
<g>
<title>AbstractIOUringChannel$AbstractUringUnsafe.readComplete (10 samples, 20.00%)</title><rect x="151.6" y="803.0" width="236.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="154.6" y="814.0">AbstractIOUringChannel$Abstract..</text>
</g>
<g>
<title>AbstractIOUringStreamChannel$IOUringStreamUnsafe.readComplete0 (10 samples, 20.00%)</title><rect x="151.6" y="787.0" width="236.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="154.6" y="798.0">AbstractIOUringStreamChannel$IO..</text>
</g>
<g>
<title>DefaultChannelPipeline.fireChannelRead (10 samples, 20.00%)</title><rect x="151.6" y="771.0" width="236.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="154.6" y="782.0">DefaultChannelPipeline.fireChan..</text>
</g>
<g>
<title>AbstractChannelHandlerContext.invokeChannelRead (10 samples, 20.00%)</title><rect x="151.6" y="755.0" width="236.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="154.6" y="766.0">AbstractChannelHandlerContext.i..</text>
</g>
<g>
<title>AbstractChannelHandlerContext.invokeChannelRead (10 samples, 20.00%)</title><rect x="151.6" y="739.0" width="236.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="154.6" y="750.0">AbstractChannelHandlerContext.i..</text>
</g>
<g>
<title>DefaultChannelPipeline$HeadContext.channelRead (10 samples, 20.00%)</title><rect x="151.6" y="723.0" width="236.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="154.6" y="734.0">DefaultChannelPipeline$HeadCont..</text>
</g>
<g>
<title>AbstractChannelHandlerContext.fireChannelRead (10 samples, 20.00%)</title><rect x="151.6" y="707.0" width="236.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="154.6" y="718.0">AbstractChannelHandlerContext.f..</text>
</g>
<g>
<title>AbstractChannelHandlerContext.invokeChannelRead (10 samples, 20.00%)</title><rect x="151.6" y="691.0" width="236.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="154.6" y="702.0">AbstractChannelHandlerContext.i..</text>
</g>
<g>
<title>AbstractChannelHandlerContext.invokeChannelRead (10 samples, 20.00%)</title><rect x="151.6" y="675.0" width="236.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="154.6" y="686.0">AbstractChannelHandlerContext.i..</text>
</g>
<g>
<title>MessageToMessageDecoder.channelRead (10 samples, 20.00%)</title><rect x="151.6" y="659.0" width="236.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="154.6" y="670.0">MessageToMessageDecoder.channel..</text>
</g>
<g>
<title>AbstractChannelHandlerContext.fireChannelRead (9 samples, 18.00%)</title><rect x="151.6" y="643.0" width="212.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="154.6" y="654.0">AbstractChannelHandlerContex..</text>
</g>
<g>
<title>AbstractChannelHandlerContext.invokeChannelRead (9 samples, 18.00%)</title><rect x="151.6" y="627.0" width="212.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="154.6" y="638.0">AbstractChannelHandlerContex..</text>
</g>
<g>
<title>AbstractChannelHandlerContext.invokeChannelRead (9 samples, 18.00%)</title><rect x="151.6" y="611.0" width="212.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="154.6" y="622.0">AbstractChannelHandlerContex..</text>
</g>
<g>
<title>SimpleChannelInboundHandler.channelRead (9 samples, 18.00%)</title><rect x="151.6" y="595.0" width="212.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="154.6" y="606.0">SimpleChannelInboundHandler...</text>
</g>
<g>
<title>ServerChannelHandler.channelRead0 (9 samples, 18.00%)</title><rect x="151.6" y="579.0" width="212.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="154.6" y="590.0">ServerChannelHandler.channel..</text>
</g>
<g>
<title>ServerChannelHandler.channelRead0 (9 samples, 18.00%)</title><rect x="151.6" y="563.0" width="212.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="154.6" y="574.0">ServerChannelHandler.channel..</text>
</g>
<g>
<title>AbstractChannel.writeAndFlush (4 samples, 8.00%)</title><rect x="151.6" y="547.0" width="94.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="154.6" y="558.0">AbstractCha..</text>
</g>
<g>
<title>DefaultChannelPipeline.writeAndFlush (4 samples, 8.00%)</title><rect x="151.6" y="531.0" width="94.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="154.6" y="542.0">DefaultChan..</text>
</g>
<g>
<title>AbstractChannelHandlerContext.writeAndFlush (4 samples, 8.00%)</title><rect x="151.6" y="515.0" width="94.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="154.6" y="526.0">AbstractCha..</text>
</g>
<g>
<title>AbstractChannelHandlerContext.writeAndFlush (4 samples, 8.00%)</title><rect x="151.6" y="499.0" width="94.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="154.6" y="510.0">AbstractCha..</text>
</g>
<g>
<title>AbstractChannelHandlerContext.write (4 samples, 8.00%)</title><rect x="151.6" y="483.0" width="94.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="154.6" y="494.0">AbstractCha..</text>
</g>
<g>
<title>AbstractChannelHandlerContext.invokeWriteAndFlush (4 samples, 8.00%)</title><rect x="151.6" y="467.0" width="94.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="154.6" y="478.0">AbstractCha..</text>
</g>
<g>
<title>AbstractChannelHandlerContext.invokeWrite0 (4 samples, 8.00%)</title><rect x="151.6" y="451.0" width="94.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="154.6" y="462.0">AbstractCha..</text>
</g>
<g>
<title>MessageToMessageEncoder.write (4 samples, 8.00%)</title><rect x="151.6" y="435.0" width="94.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="154.6" y="446.0">MessageToMe..</text>
</g>
<g>
<title>AbstractChannelHandlerContext.write (1 samples, 2.00%)</title><rect x="151.6" y="419.0" width="23.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="154.6" y="430.0">A..</text>
</g>
<g>
<title>AbstractChannelHandlerContext.write (1 samples, 2.00%)</title><rect x="151.6" y="403.0" width="23.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="154.6" y="414.0">A..</text>
</g>
<g>
<title>AbstractChannelHandlerContext.invokeWrite (1 samples, 2.00%)</title><rect x="151.6" y="387.0" width="23.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="154.6" y="398.0">A..</text>
</g>
<g>
<title>AbstractChannelHandlerContext.invokeWrite0 (1 samples, 2.00%)</title><rect x="151.6" y="371.0" width="23.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="154.6" y="382.0">A..</text>
</g>
<g>
<title>DefaultChannelPipeline$HeadContext.write (1 samples, 2.00%)</title><rect x="151.6" y="355.0" width="23.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="154.6" y="366.0">D..</text>
</g>
<g>
<title>AbstractChannel$AbstractUnsafe.write (1 samples, 2.00%)</title><rect x="151.6" y="339.0" width="23.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="154.6" y="350.0">A..</text>
</g>
<g>
<title>DefaultMessageSizeEstimator$HandleImpl.size (1 samples, 2.00%)</title><rect x="151.6" y="323.0" width="23.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="154.6" y="334.0">D..</text>
</g>
<g>
<title>AbstractByteBuf.readableBytes (1 samples, 2.00%)</title><rect x="151.6" y="307.0" width="23.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="154.6" y="318.0">A..</text>
</g>
<g>
<title>CodecOutputList.recycle (1 samples, 2.00%)</title><rect x="175.2" y="419.0" width="23.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="178.2" y="430.0">C..</text>
</g>
<g>
<title>StringEncoder.encode (2 samples, 4.00%)</title><rect x="198.8" y="419.0" width="47.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="201.8" y="430.0">Stri..</text>
</g>
<g>
<title>StringEncoder.encode (2 samples, 4.00%)</title><rect x="198.8" y="403.0" width="47.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="201.8" y="414.0">Stri..</text>
</g>
<g>
<title>CharBuffer.wrap (1 samples, 2.00%)</title><rect x="198.8" y="387.0" width="23.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="201.8" y="398.0">C..</text>
</g>
<g>
<title>CharBuffer.wrap (1 samples, 2.00%)</title><rect x="198.8" y="371.0" width="23.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="201.8" y="382.0">C..</text>
</g>
<g>
<title>StringCharBuffer.&lt;init&gt; (1 samples, 2.00%)</title><rect x="198.8" y="355.0" width="23.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="201.8" y="366.0">S..</text>
</g>
<g>
<title>Objects.checkFromToIndex (1 samples, 2.00%)</title><rect x="198.8" y="339.0" width="23.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="201.8" y="350.0">O..</text>
</g>
<g>
<title>Preconditions.checkFromToIndex (1 samples, 2.00%)</title><rect x="198.8" y="323.0" width="23.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="201.8" y="334.0">P..</text>
</g>
<g>
<title>String.length (1 samples, 2.00%)</title><rect x="198.8" y="307.0" width="23.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="201.8" y="318.0">S..</text>
</g>
<g>
<title>StringCharBuffer.&lt;init&gt; (1 samples, 2.00%)</title><rect x="222.4" y="387.0" width="23.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="225.4" y="398.0">S..</text>
</g>
<g>
<title>Invokers$Holder.linkToTargetMethod (1 samples, 2.00%)</title><rect x="246.0" y="547.0" width="23.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="249.0" y="558.0">I..</text>
</g>
<g>
<title>LambdaForm$MH.0x0000000800bb3840.invoke (1 samples, 2.00%)</title><rect x="246.0" y="531.0" width="23.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="249.0" y="542.0">L..</text>
</g>
<g>
<title>LambdaForm$MH.0x0000000800bb7040.invoke (1 samples, 2.00%)</title><rect x="246.0" y="515.0" width="23.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="249.0" y="526.0">L..</text>
</g>
<g>
<title>DirectMethodHandle$Holder.invokeStatic (1 samples, 2.00%)</title><rect x="246.0" y="499.0" width="23.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="249.0" y="510.0">D..</text>
</g>
<g>
<title>StringConcatHelper.prepend (1 samples, 2.00%)</title><rect x="246.0" y="483.0" width="23.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="249.0" y="494.0">S..</text>
</g>
<g>
<title>PrintStream.println (4 samples, 8.00%)</title><rect x="269.6" y="547.0" width="94.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="272.6" y="558.0">PrintStream..</text>
</g>
<g>
<title>PrintStream.writeln (4 samples, 8.00%)</title><rect x="269.6" y="531.0" width="94.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="272.6" y="542.0">PrintStream..</text>
</g>
<g>
<title>OutputStreamWriter.flushBuffer (4 samples, 8.00%)</title><rect x="269.6" y="515.0" width="94.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="272.6" y="526.0">OutputStrea..</text>
</g>
<g>
<title>StreamEncoder.flushBuffer (4 samples, 8.00%)</title><rect x="269.6" y="499.0" width="94.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="272.6" y="510.0">StreamEncod..</text>
</g>
<g>
<title>StreamEncoder.implFlushBuffer (4 samples, 8.00%)</title><rect x="269.6" y="483.0" width="94.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="272.6" y="494.0">StreamEncod..</text>
</g>
<g>
<title>StreamEncoder.writeBytes (4 samples, 8.00%)</title><rect x="269.6" y="467.0" width="94.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="272.6" y="478.0">StreamEncod..</text>
</g>
<g>
<title>PrintStream.write (4 samples, 8.00%)</title><rect x="269.6" y="451.0" width="94.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="272.6" y="462.0">PrintStream..</text>
</g>
<g>
<title>BufferedOutputStream.flush (4 samples, 8.00%)</title><rect x="269.6" y="435.0" width="94.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="272.6" y="446.0">BufferedOut..</text>
</g>
<g>
<title>BufferedOutputStream.flushBuffer (4 samples, 8.00%)</title><rect x="269.6" y="419.0" width="94.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="272.6" y="430.0">BufferedOut..</text>
</g>
<g>
<title>FileOutputStream.write (4 samples, 8.00%)</title><rect x="269.6" y="403.0" width="94.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="272.6" y="414.0">FileOutputS..</text>
</g>
<g>
<title>FileOutputStream.writeBytes (4 samples, 8.00%)</title><rect x="269.6" y="387.0" width="94.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="272.6" y="398.0">FileOutputS..</text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (4 samples, 8.00%)</title><rect x="269.6" y="371.0" width="94.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="272.6" y="382.0">Java_java_i..</text>
</g>
<g>
<title>writeBytes (4 samples, 8.00%)</title><rect x="269.6" y="355.0" width="94.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="272.6" y="366.0">writeBytes</text>
</g>
<g>
<title>__libc_write (4 samples, 8.00%)</title><rect x="269.6" y="339.0" width="94.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="272.6" y="350.0">__libc_write</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 6.00%)</title><rect x="293.2" y="323.0" width="70.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="296.2" y="334.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (3 samples, 6.00%)</title><rect x="293.2" y="307.0" width="70.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="296.2" y="318.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_write (2 samples, 4.00%)</title><rect x="293.2" y="291.0" width="47.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="296.2" y="302.0">__x6..</text>
</g>
<g>
<title>ksys_write (2 samples, 4.00%)</title><rect x="293.2" y="275.0" width="47.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="296.2" y="286.0">ksys..</text>
</g>
<g>
<title>vfs_write (2 samples, 4.00%)</title><rect x="293.2" y="259.0" width="47.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="296.2" y="270.0">vfs_..</text>
</g>
<g>
<title>tty_write (2 samples, 4.00%)</title><rect x="293.2" y="243.0" width="47.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="296.2" y="254.0">tty_..</text>
</g>
<g>
<title>do_tty_write (2 samples, 4.00%)</title><rect x="293.2" y="227.0" width="47.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="296.2" y="238.0">do_t..</text>
</g>
<g>
<title>n_tty_write (2 samples, 4.00%)</title><rect x="293.2" y="211.0" width="47.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="296.2" y="222.0">n_tt..</text>
</g>
<g>
<title>process_output_block (2 samples, 4.00%)</title><rect x="293.2" y="195.0" width="47.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="296.2" y="206.0">proc..</text>
</g>
<g>
<title>pty_write (2 samples, 4.00%)</title><rect x="293.2" y="179.0" width="47.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="296.2" y="190.0">pty_..</text>
</g>
<g>
<title>tty_flip_buffer_push (2 samples, 4.00%)</title><rect x="293.2" y="163.0" width="47.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="296.2" y="174.0">tty_..</text>
</g>
<g>
<title>queue_work_on (2 samples, 4.00%)</title><rect x="293.2" y="147.0" width="47.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="296.2" y="158.0">queu..</text>
</g>
<g>
<title>syscall_enter_from_user_mode (1 samples, 2.00%)</title><rect x="340.4" y="291.0" width="23.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="343.4" y="302.0">s..</text>
</g>
<g>
<title>StringDecoder.decode (1 samples, 2.00%)</title><rect x="364.0" y="643.0" width="23.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="367.0" y="654.0">S..</text>
</g>
<g>
<title>StringDecoder.decode (1 samples, 2.00%)</title><rect x="364.0" y="627.0" width="23.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="367.0" y="638.0">S..</text>
</g>
<g>
<title>AbstractByteBuf.toString (1 samples, 2.00%)</title><rect x="364.0" y="611.0" width="23.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="367.0" y="622.0">A..</text>
</g>
<g>
<title>AbstractByteBuf.toString (1 samples, 2.00%)</title><rect x="364.0" y="595.0" width="23.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="367.0" y="606.0">A..</text>
</g>
<g>
<title>ByteBufUtil.decodeString (1 samples, 2.00%)</title><rect x="364.0" y="579.0" width="23.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="367.0" y="590.0">B..</text>
</g>
<g>
<title>ByteBufUtil.threadLocalTempArray (1 samples, 2.00%)</title><rect x="364.0" y="563.0" width="23.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="367.0" y="574.0">B..</text>
</g>
<g>
<title>IOUringEventLoop.handleWrite (2 samples, 4.00%)</title><rect x="387.6" y="819.0" width="47.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="390.6" y="830.0">IOUr..</text>
</g>
<g>
<title>AbstractIOUringChannel$AbstractUringUnsafe.writeComplete (2 samples, 4.00%)</title><rect x="387.6" y="803.0" width="47.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="390.6" y="814.0">Abst..</text>
</g>
<g>
<title>AbstractIOUringStreamChannel$IOUringStreamUnsafe.writeComplete0 (2 samples, 4.00%)</title><rect x="387.6" y="787.0" width="47.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="390.6" y="798.0">Abst..</text>
</g>
<g>
<title>ChannelOutboundBuffer.removeBytes (2 samples, 4.00%)</title><rect x="387.6" y="771.0" width="47.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="390.6" y="782.0">Chan..</text>
</g>
<g>
<title>ChannelOutboundBuffer.remove (2 samples, 4.00%)</title><rect x="387.6" y="755.0" width="47.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="390.6" y="766.0">Chan..</text>
</g>
<g>
<title>ChannelOutboundBuffer.safeSuccess (1 samples, 2.00%)</title><rect x="411.2" y="739.0" width="23.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="414.2" y="750.0">C..</text>
</g>
<g>
<title>PromiseNotificationUtil.trySuccess (1 samples, 2.00%)</title><rect x="411.2" y="723.0" width="23.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="414.2" y="734.0">P..</text>
</g>
<g>
<title>DefaultPromise.trySuccess (1 samples, 2.00%)</title><rect x="411.2" y="707.0" width="23.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="414.2" y="718.0">D..</text>
</g>
<g>
<title>DefaultPromise.setSuccess0 (1 samples, 2.00%)</title><rect x="411.2" y="691.0" width="23.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="414.2" y="702.0">D..</text>
</g>
<g>
<title>DefaultPromise.setValue0 (1 samples, 2.00%)</title><rect x="411.2" y="675.0" width="23.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="414.2" y="686.0">D..</text>
</g>
<g>
<title>DefaultPromise.checkNotifyWaiters (1 samples, 2.00%)</title><rect x="411.2" y="659.0" width="23.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="414.2" y="670.0">D..</text>
</g>
<g>
<title>IOUringSubmissionQueue.submitAndWait (13 samples, 26.00%)</title><rect x="434.8" y="867.0" width="306.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="437.8" y="878.0">IOUringSubmissionQueue.submitAndWait</text>
</g>
<g>
<title>IOUringSubmissionQueue.submit (11 samples, 22.00%)</title><rect x="434.8" y="851.0" width="259.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="437.8" y="862.0">IOUringSubmissionQueue.submit</text>
</g>
<g>
<title>Native.ioUringEnter (11 samples, 22.00%)</title><rect x="434.8" y="835.0" width="259.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="437.8" y="846.0">Native.ioUringEnter</text>
</g>
<g>
<title>/tmp/libnetty_transport_native_io_uring_x86_646735408832925079145.so (deleted) (10 samples, 20.00%)</title><rect x="458.4" y="819.0" width="236.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="461.4" y="830.0">/tmp/libnetty_transport_native_..</text>
</g>
<g>
<title>syscall (10 samples, 20.00%)</title><rect x="458.4" y="803.0" width="236.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="461.4" y="814.0">syscall</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 18.00%)</title><rect x="482.0" y="787.0" width="212.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="485.0" y="798.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (9 samples, 18.00%)</title><rect x="482.0" y="771.0" width="212.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="485.0" y="782.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_io_uring_enter (9 samples, 18.00%)</title><rect x="482.0" y="755.0" width="212.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="485.0" y="766.0">__x64_sys_io_uring_enter</text>
</g>
<g>
<title>__do_sys_io_uring_enter (9 samples, 18.00%)</title><rect x="482.0" y="739.0" width="212.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="485.0" y="750.0">__do_sys_io_uring_enter</text>
</g>
<g>
<title>io_submit_sqes (9 samples, 18.00%)</title><rect x="482.0" y="723.0" width="212.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="485.0" y="734.0">io_submit_sqes</text>
</g>
<g>
<title>blk_finish_plug (1 samples, 2.00%)</title><rect x="482.0" y="707.0" width="23.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="485.0" y="718.0">b..</text>
</g>
<g>
<title>blk_flush_plug_list (1 samples, 2.00%)</title><rect x="482.0" y="691.0" width="23.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="485.0" y="702.0">b..</text>
</g>
<g>
<title>io_init_req (1 samples, 2.00%)</title><rect x="505.6" y="707.0" width="23.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="508.6" y="718.0">i..</text>
</g>
<g>
<title>io_file_get (1 samples, 2.00%)</title><rect x="505.6" y="691.0" width="23.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="508.6" y="702.0">i..</text>
</g>
<g>
<title>io_submit_sqe (7 samples, 14.00%)</title><rect x="529.2" y="707.0" width="165.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="532.2" y="718.0">io_submit_sqe</text>
</g>
<g>
<title>io_queue_sqe (7 samples, 14.00%)</title><rect x="529.2" y="691.0" width="165.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="532.2" y="702.0">io_queue_sqe</text>
</g>
<g>
<title>__io_queue_sqe (7 samples, 14.00%)</title><rect x="529.2" y="675.0" width="165.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="532.2" y="686.0">__io_queue_sqe</text>
</g>
<g>
<title>io_issue_sqe (7 samples, 14.00%)</title><rect x="529.2" y="659.0" width="165.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="532.2" y="670.0">io_issue_sqe</text>
</g>
<g>
<title>io_read (1 samples, 2.00%)</title><rect x="529.2" y="643.0" width="23.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="532.2" y="654.0">i..</text>
</g>
<g>
<title>io_write (6 samples, 12.00%)</title><rect x="552.8" y="643.0" width="141.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="555.8" y="654.0">io_write</text>
</g>
<g>
<title>sock_write_iter (6 samples, 12.00%)</title><rect x="552.8" y="627.0" width="141.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="555.8" y="638.0">sock_write_iter</text>
</g>
<g>
<title>sock_sendmsg (6 samples, 12.00%)</title><rect x="552.8" y="611.0" width="141.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="555.8" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (6 samples, 12.00%)</title><rect x="552.8" y="595.0" width="141.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="555.8" y="606.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (6 samples, 12.00%)</title><rect x="552.8" y="579.0" width="141.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="555.8" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg_locked (6 samples, 12.00%)</title><rect x="552.8" y="563.0" width="141.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="555.8" y="574.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>tcp_push (6 samples, 12.00%)</title><rect x="552.8" y="547.0" width="141.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="555.8" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (6 samples, 12.00%)</title><rect x="552.8" y="531.0" width="141.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="555.8" y="542.0">__tcp_push_pending..</text>
</g>
<g>
<title>tcp_write_xmit (6 samples, 12.00%)</title><rect x="552.8" y="515.0" width="141.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="555.8" y="526.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (6 samples, 12.00%)</title><rect x="552.8" y="499.0" width="141.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="555.8" y="510.0">__tcp_transmit_skb</text>
</g>
<g>
<title>ip_queue_xmit (6 samples, 12.00%)</title><rect x="552.8" y="483.0" width="141.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="555.8" y="494.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (6 samples, 12.00%)</title><rect x="552.8" y="467.0" width="141.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="555.8" y="478.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_output (6 samples, 12.00%)</title><rect x="552.8" y="451.0" width="141.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="555.8" y="462.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (6 samples, 12.00%)</title><rect x="552.8" y="435.0" width="141.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="555.8" y="446.0">ip_finish_output</text>
</g>
<g>
<title>__ip_finish_output (6 samples, 12.00%)</title><rect x="552.8" y="419.0" width="141.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="555.8" y="430.0">__ip_finish_output</text>
</g>
<g>
<title>ip_finish_output2 (6 samples, 12.00%)</title><rect x="552.8" y="403.0" width="141.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="555.8" y="414.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 8.00%)</title><rect x="552.8" y="387.0" width="94.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="555.8" y="398.0">__local_bh_..</text>
</g>
<g>
<title>do_softirq (4 samples, 8.00%)</title><rect x="552.8" y="371.0" width="94.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="555.8" y="382.0">do_softirq</text>
</g>
<g>
<title>do_softirq_own_stack (4 samples, 8.00%)</title><rect x="552.8" y="355.0" width="94.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="555.8" y="366.0">do_softirq_..</text>
</g>
<g>
<title>asm_call_sysvec_on_stack (4 samples, 8.00%)</title><rect x="552.8" y="339.0" width="94.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="555.8" y="350.0">asm_call_sy..</text>
</g>
<g>
<title>__softirqentry_text_start (4 samples, 8.00%)</title><rect x="552.8" y="323.0" width="94.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="555.8" y="334.0">__softirqen..</text>
</g>
<g>
<title>net_rx_action (4 samples, 8.00%)</title><rect x="552.8" y="307.0" width="94.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="555.8" y="318.0">net_rx_action</text>
</g>
<g>
<title>napi_poll (4 samples, 8.00%)</title><rect x="552.8" y="291.0" width="94.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="555.8" y="302.0">napi_poll</text>
</g>
<g>
<title>process_backlog (4 samples, 8.00%)</title><rect x="552.8" y="275.0" width="94.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="555.8" y="286.0">process_bac..</text>
</g>
<g>
<title>__netif_receive_skb (4 samples, 8.00%)</title><rect x="552.8" y="259.0" width="94.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="555.8" y="270.0">__netif_rec..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (4 samples, 8.00%)</title><rect x="552.8" y="243.0" width="94.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="555.8" y="254.0">__netif_rec..</text>
</g>
<g>
<title>ip_rcv (4 samples, 8.00%)</title><rect x="552.8" y="227.0" width="94.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="555.8" y="238.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (4 samples, 8.00%)</title><rect x="552.8" y="211.0" width="94.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="555.8" y="222.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (4 samples, 8.00%)</title><rect x="552.8" y="195.0" width="94.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="555.8" y="206.0">ip_local_de..</text>
</g>
<g>
<title>ip_local_deliver_finish (4 samples, 8.00%)</title><rect x="552.8" y="179.0" width="94.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="555.8" y="190.0">ip_local_de..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (4 samples, 8.00%)</title><rect x="552.8" y="163.0" width="94.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="555.8" y="174.0">ip_protocol..</text>
</g>
<g>
<title>tcp_v4_rcv (3 samples, 6.00%)</title><rect x="576.4" y="147.0" width="70.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="579.4" y="158.0">tcp_v4_rcv</text>
</g>
<g>
<title>tcp_filter (1 samples, 2.00%)</title><rect x="576.4" y="131.0" width="23.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="579.4" y="142.0">t..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 2.00%)</title><rect x="576.4" y="115.0" width="23.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="579.4" y="126.0">_..</text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 4.00%)</title><rect x="600.0" y="131.0" width="47.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="603.0" y="142.0">tcp_..</text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 2.00%)</title><rect x="623.6" y="115.0" width="23.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="626.6" y="126.0">t..</text>
</g>
<g>
<title>tcp_data_ready (1 samples, 2.00%)</title><rect x="623.6" y="99.0" width="23.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="626.6" y="110.0">t..</text>
</g>
<g>
<title>sock_def_readable (1 samples, 2.00%)</title><rect x="623.6" y="83.0" width="23.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="626.6" y="94.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 2.00%)</title><rect x="623.6" y="67.0" width="23.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="626.6" y="78.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 2.00%)</title><rect x="623.6" y="51.0" width="23.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="626.6" y="62.0">_..</text>
</g>
<g>
<title>__lock_text_start (1 samples, 2.00%)</title><rect x="623.6" y="35.0" width="23.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="626.6" y="46.0">_..</text>
</g>
<g>
<title>neigh_hh_output (2 samples, 4.00%)</title><rect x="647.2" y="387.0" width="47.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="650.2" y="398.0">neig..</text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 4.00%)</title><rect x="647.2" y="371.0" width="47.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="650.2" y="382.0">dev_..</text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 4.00%)</title><rect x="647.2" y="355.0" width="47.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="650.2" y="366.0">__de..</text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 4.00%)</title><rect x="647.2" y="339.0" width="47.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="650.2" y="350.0">vali..</text>
</g>
<g>
<title>netif_skb_features (2 samples, 4.00%)</title><rect x="647.2" y="323.0" width="47.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="650.2" y="334.0">neti..</text>
</g>
<g>
<title>Native.ioUringEnter (2 samples, 4.00%)</title><rect x="694.4" y="851.0" width="47.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="697.4" y="862.0">Nati..</text>
</g>
<g>
<title>/tmp/libnetty_transport_native_io_uring_x86_646735408832925079145.so (deleted) (1 samples, 2.00%)</title><rect x="718.0" y="835.0" width="23.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="721.0" y="846.0">/..</text>
</g>
<g>
<title>syscall (1 samples, 2.00%)</title><rect x="718.0" y="819.0" width="23.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="721.0" y="830.0">s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 2.00%)</title><rect x="718.0" y="803.0" width="23.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="721.0" y="814.0">e..</text>
</g>
<g>
<title>do_syscall_64 (1 samples, 2.00%)</title><rect x="718.0" y="787.0" width="23.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="721.0" y="798.0">d..</text>
</g>
<g>
<title>__x64_sys_io_uring_enter (1 samples, 2.00%)</title><rect x="718.0" y="771.0" width="23.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="721.0" y="782.0">_..</text>
</g>
<g>
<title>__do_sys_io_uring_enter (1 samples, 2.00%)</title><rect x="718.0" y="755.0" width="23.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="721.0" y="766.0">_..</text>
</g>
<g>
<title>io_cqring_wait (1 samples, 2.00%)</title><rect x="718.0" y="739.0" width="23.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="721.0" y="750.0">i..</text>
</g>
<g>
<title>prepare_to_wait_exclusive (1 samples, 2.00%)</title><rect x="718.0" y="723.0" width="23.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="721.0" y="734.0">p..</text>
</g>
<g>
<title>__lock_text_start (1 samples, 2.00%)</title><rect x="718.0" y="707.0" width="23.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="721.0" y="718.0">_..</text>
</g>
<g>
<title>SingleThreadEventExecutor.isShuttingDown (1 samples, 2.00%)</title><rect x="741.6" y="867.0" width="23.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="744.6" y="878.0">S..</text>
</g>
<g>
<title>SingleThreadEventExecutor.runAllTasks (6 samples, 12.00%)</title><rect x="765.2" y="867.0" width="141.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="768.2" y="878.0">SingleThreadEventE..</text>
</g>
<g>
<title>SingleThreadEventExecutor.runAllTasksFrom (6 samples, 12.00%)</title><rect x="765.2" y="851.0" width="141.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="768.2" y="862.0">SingleThreadEventE..</text>
</g>
<g>
<title>AbstractEventExecutor.safeExecute (6 samples, 12.00%)</title><rect x="765.2" y="835.0" width="141.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="768.2" y="846.0">AbstractEventExecu..</text>
</g>
<g>
<title>AbstractChannelHandlerContext$WriteTask.run (6 samples, 12.00%)</title><rect x="765.2" y="819.0" width="141.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="768.2" y="830.0">AbstractChannelHan..</text>
</g>
<g>
<title>AbstractChannelHandlerContext.invokeWriteAndFlush (6 samples, 12.00%)</title><rect x="765.2" y="803.0" width="141.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="768.2" y="814.0">AbstractChannelHan..</text>
</g>
<g>
<title>AbstractChannelHandlerContext.invokeWrite0 (6 samples, 12.00%)</title><rect x="765.2" y="787.0" width="141.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="768.2" y="798.0">AbstractChannelHan..</text>
</g>
<g>
<title>MessageToMessageEncoder.write (6 samples, 12.00%)</title><rect x="765.2" y="771.0" width="141.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="768.2" y="782.0">MessageToMessageEn..</text>
</g>
<g>
<title>StringEncoder.encode (6 samples, 12.00%)</title><rect x="765.2" y="755.0" width="141.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="768.2" y="766.0">StringEncoder.encode</text>
</g>
<g>
<title>StringEncoder.encode (6 samples, 12.00%)</title><rect x="765.2" y="739.0" width="141.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="768.2" y="750.0">StringEncoder.encode</text>
</g>
<g>
<title>ByteBufUtil.encodeString (6 samples, 12.00%)</title><rect x="765.2" y="723.0" width="141.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="768.2" y="734.0">ByteBufUtil.encode..</text>
</g>
<g>
<title>ByteBufUtil.encodeString0 (6 samples, 12.00%)</title><rect x="765.2" y="707.0" width="141.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="768.2" y="718.0">ByteBufUtil.encode..</text>
</g>
<g>
<title>AbstractByteBufAllocator.buffer (3 samples, 6.00%)</title><rect x="765.2" y="691.0" width="70.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="768.2" y="702.0">Abstract..</text>
</g>
<g>
<title>AbstractByteBufAllocator.directBuffer (3 samples, 6.00%)</title><rect x="765.2" y="675.0" width="70.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="768.2" y="686.0">Abstract..</text>
</g>
<g>
<title>AbstractByteBufAllocator.directBuffer (3 samples, 6.00%)</title><rect x="765.2" y="659.0" width="70.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="768.2" y="670.0">Abstract..</text>
</g>
<g>
<title>PooledByteBufAllocator.newDirectBuffer (3 samples, 6.00%)</title><rect x="765.2" y="643.0" width="70.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="768.2" y="654.0">PooledBy..</text>
</g>
<g>
<title>AbstractByteBufAllocator.toLeakAwareBuffer (1 samples, 2.00%)</title><rect x="765.2" y="627.0" width="23.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="768.2" y="638.0">A..</text>
</g>
<g>
<title>ResourceLeakDetector.track (1 samples, 2.00%)</title><rect x="765.2" y="611.0" width="23.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="768.2" y="622.0">R..</text>
</g>
<g>
<title>ResourceLeakDetector.track0 (1 samples, 2.00%)</title><rect x="765.2" y="595.0" width="23.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="768.2" y="606.0">R..</text>
</g>
<g>
<title>ThreadLocalRandom.nextInt (1 samples, 2.00%)</title><rect x="765.2" y="579.0" width="23.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="768.2" y="590.0">T..</text>
</g>
<g>
<title>ThreadLocalRandom.nextSeed (1 samples, 2.00%)</title><rect x="765.2" y="563.0" width="23.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="768.2" y="574.0">T..</text>
</g>
<g>
<title>PoolArena.allocate (2 samples, 4.00%)</title><rect x="788.8" y="627.0" width="47.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="791.8" y="638.0">Pool..</text>
</g>
<g>
<title>PoolArena$DirectArena.newByteBuf (1 samples, 2.00%)</title><rect x="788.8" y="611.0" width="23.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="791.8" y="622.0">P..</text>
</g>
<g>
<title>PoolArena.allocate (1 samples, 2.00%)</title><rect x="812.4" y="611.0" width="23.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="815.4" y="622.0">P..</text>
</g>
<g>
<title>PoolArena.tcacheAllocateSmall (1 samples, 2.00%)</title><rect x="812.4" y="595.0" width="23.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="815.4" y="606.0">P..</text>
</g>
<g>
<title>PoolThreadCache.allocateSmall (1 samples, 2.00%)</title><rect x="812.4" y="579.0" width="23.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="815.4" y="590.0">P..</text>
</g>
<g>
<title>PoolThreadCache.allocate (1 samples, 2.00%)</title><rect x="812.4" y="563.0" width="23.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="815.4" y="574.0">P..</text>
</g>
<g>
<title>PoolThreadCache$MemoryRegionCache.allocate (1 samples, 2.00%)</title><rect x="812.4" y="547.0" width="23.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="815.4" y="558.0">P..</text>
</g>
<g>
<title>PoolThreadCache$MemoryRegionCache$Entry.recycle (1 samples, 2.00%)</title><rect x="812.4" y="531.0" width="23.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="815.4" y="542.0">P..</text>
</g>
<g>
<title>Recycler$DefaultHandle.recycle (1 samples, 2.00%)</title><rect x="812.4" y="515.0" width="23.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="815.4" y="526.0">R..</text>
</g>
<g>
<title>Recycler$Stack.push (1 samples, 2.00%)</title><rect x="812.4" y="499.0" width="23.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="815.4" y="510.0">R..</text>
</g>
<g>
<title>Recycler$Stack.pushNow (1 samples, 2.00%)</title><rect x="812.4" y="483.0" width="23.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="815.4" y="494.0">R..</text>
</g>
<g>
<title>CharsetEncoder.encode (2 samples, 4.00%)</title><rect x="836.0" y="691.0" width="47.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="839.0" y="702.0">Char..</text>
</g>
<g>
<title>UTF_8$Encoder.encodeLoop (2 samples, 4.00%)</title><rect x="836.0" y="675.0" width="47.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="839.0" y="686.0">UTF_..</text>
</g>
<g>
<title>UTF_8$Encoder.encodeBufferLoop (2 samples, 4.00%)</title><rect x="836.0" y="659.0" width="47.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="839.0" y="670.0">UTF_..</text>
</g>
<g>
<title>StringCharBuffer.get (2 samples, 4.00%)</title><rect x="836.0" y="643.0" width="47.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="839.0" y="654.0">Stri..</text>
</g>
<g>
<title>String.charAt (1 samples, 2.00%)</title><rect x="859.6" y="627.0" width="23.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="862.6" y="638.0">S..</text>
</g>
<g>
<title>PooledByteBuf.internalNioBuffer (1 samples, 2.00%)</title><rect x="883.2" y="691.0" width="23.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="886.2" y="702.0">P..</text>
</g>
<g>
<title>AbstractByteBuf.checkRangeBounds (1 samples, 2.00%)</title><rect x="883.2" y="675.0" width="23.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="886.2" y="686.0">A..</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 2.00%)</title><rect x="906.8" y="947.0" width="23.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="909.8" y="958.0">[..</text>
</g>
<g>
<title>clock_gettime (1 samples, 2.00%)</title><rect x="906.8" y="931.0" width="23.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="909.8" y="942.0">c..</text>
</g>
<g>
<title>[VM Periodic Tas tid=7719] (3 samples, 6.00%)</title><rect x="930.4" y="963.0" width="70.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="933.4" y="974.0">[VM Peri..</text>
</g>
<g>
<title>start_thread (3 samples, 6.00%)</title><rect x="930.4" y="947.0" width="70.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="933.4" y="958.0">start_th..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 6.00%)</title><rect x="930.4" y="931.0" width="70.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="933.4" y="942.0">thread_n..</text>
</g>
<g>
<title>Thread::call_run() (3 samples, 6.00%)</title><rect x="930.4" y="915.0" width="70.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="933.4" y="926.0">Thread::..</text>
</g>
<g>
<title>WatcherThread::run() (3 samples, 6.00%)</title><rect x="930.4" y="899.0" width="70.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="933.4" y="910.0">WatcherT..</text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (1 samples, 2.00%)</title><rect x="930.4" y="883.0" width="23.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="933.4" y="894.0">P..</text>
</g>
<g>
<title>StatSamplerTask::task() (1 samples, 2.00%)</title><rect x="930.4" y="867.0" width="23.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="933.4" y="878.0">S..</text>
</g>
<g>
<title>PerfLongVariant::sample() (1 samples, 2.00%)</title><rect x="930.4" y="851.0" width="23.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="933.4" y="862.0">P..</text>
</g>
<g>
<title>WatcherThread::sleep() const (1 samples, 2.00%)</title><rect x="954.0" y="883.0" width="23.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="957.0" y="894.0">W..</text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 2.00%)</title><rect x="977.6" y="883.0" width="23.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="980.6" y="894.0">_..</text>
</g>
<g>
<title>[pool-1-thread-1 tid=7774] (8 samples, 16.00%)</title><rect x="1001.2" y="963.0" width="188.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1004.2" y="974.0">[pool-1-thread-1 tid=7774]</text>
</g>
<g>
<title>Thread.run (8 samples, 16.00%)</title><rect x="1001.2" y="947.0" width="188.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1004.2" y="958.0">Thread.run</text>
</g>
<g>
<title>ThreadPoolExecutor$Worker.run (8 samples, 16.00%)</title><rect x="1001.2" y="931.0" width="188.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1004.2" y="942.0">ThreadPoolExecutor$Worke..</text>
</g>
<g>
<title>ThreadPoolExecutor.runWorker (8 samples, 16.00%)</title><rect x="1001.2" y="915.0" width="188.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1004.2" y="926.0">ThreadPoolExecutor.runWo..</text>
</g>
<g>
<title>ScheduledThreadPoolExecutor$ScheduledFutureTask.run (4 samples, 8.00%)</title><rect x="1024.8" y="899.0" width="94.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1027.8" y="910.0">ScheduledTh..</text>
</g>
<g>
<title>FutureTask.runAndReset (4 samples, 8.00%)</title><rect x="1024.8" y="883.0" width="94.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1027.8" y="894.0">FutureTask...</text>
</g>
<g>
<title>Executors$RunnableAdapter.call (4 samples, 8.00%)</title><rect x="1024.8" y="867.0" width="94.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1027.8" y="878.0">Executors$R..</text>
</g>
<g>
<title>ServerChannelHandler$$Lambda$53.0x0000000800bf7070.run (4 samples, 8.00%)</title><rect x="1024.8" y="851.0" width="94.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1027.8" y="862.0">ServerChann..</text>
</g>
<g>
<title>ServerChannelHandler.lambda$channelActive$0 (4 samples, 8.00%)</title><rect x="1024.8" y="835.0" width="94.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1027.8" y="846.0">ServerChann..</text>
</g>
<g>
<title>AbstractChannel.writeAndFlush (4 samples, 8.00%)</title><rect x="1024.8" y="819.0" width="94.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1027.8" y="830.0">AbstractCha..</text>
</g>
<g>
<title>DefaultChannelPipeline.writeAndFlush (4 samples, 8.00%)</title><rect x="1024.8" y="803.0" width="94.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1027.8" y="814.0">DefaultChan..</text>
</g>
<g>
<title>AbstractChannelHandlerContext.writeAndFlush (4 samples, 8.00%)</title><rect x="1024.8" y="787.0" width="94.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1027.8" y="798.0">AbstractCha..</text>
</g>
<g>
<title>AbstractChannelHandlerContext.writeAndFlush (4 samples, 8.00%)</title><rect x="1024.8" y="771.0" width="94.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1027.8" y="782.0">AbstractCha..</text>
</g>
<g>
<title>AbstractChannelHandlerContext.write (4 samples, 8.00%)</title><rect x="1024.8" y="755.0" width="94.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1027.8" y="766.0">AbstractCha..</text>
</g>
<g>
<title>AbstractChannelHandlerContext.safeExecute (4 samples, 8.00%)</title><rect x="1024.8" y="739.0" width="94.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1027.8" y="750.0">AbstractCha..</text>
</g>
<g>
<title>SingleThreadEventExecutor.execute (4 samples, 8.00%)</title><rect x="1024.8" y="723.0" width="94.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1027.8" y="734.0">SingleThrea..</text>
</g>
<g>
<title>SingleThreadEventExecutor.execute (4 samples, 8.00%)</title><rect x="1024.8" y="707.0" width="94.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1027.8" y="718.0">SingleThrea..</text>
</g>
<g>
<title>IOUringEventLoop.wakeup (4 samples, 8.00%)</title><rect x="1024.8" y="691.0" width="94.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1027.8" y="702.0">IOUringEven..</text>
</g>
<g>
<title>Native.eventFdWrite (4 samples, 8.00%)</title><rect x="1024.8" y="675.0" width="94.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1027.8" y="686.0">Native.even..</text>
</g>
<g>
<title>__write (4 samples, 8.00%)</title><rect x="1024.8" y="659.0" width="94.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1027.8" y="670.0">__write</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 6.00%)</title><rect x="1048.4" y="643.0" width="70.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1051.4" y="654.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (3 samples, 6.00%)</title><rect x="1048.4" y="627.0" width="70.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1051.4" y="638.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_write (3 samples, 6.00%)</title><rect x="1048.4" y="611.0" width="70.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1051.4" y="622.0">__x64_sy..</text>
</g>
<g>
<title>ksys_write (3 samples, 6.00%)</title><rect x="1048.4" y="595.0" width="70.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1051.4" y="606.0">ksys_write</text>
</g>
<g>
<title>vfs_write (3 samples, 6.00%)</title><rect x="1048.4" y="579.0" width="70.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1051.4" y="590.0">vfs_write</text>
</g>
<g>
<title>eventfd_write (3 samples, 6.00%)</title><rect x="1048.4" y="563.0" width="70.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1051.4" y="574.0">eventfd_..</text>
</g>
<g>
<title>ThreadPoolExecutor.getTask (3 samples, 6.00%)</title><rect x="1119.2" y="899.0" width="70.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1122.2" y="910.0">ThreadPo..</text>
</g>
<g>
<title>ScheduledThreadPoolExecutor$DelayedWorkQueue.take (3 samples, 6.00%)</title><rect x="1119.2" y="883.0" width="70.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1122.2" y="894.0">Schedule..</text>
</g>
<g>
<title>ScheduledThreadPoolExecutor$DelayedWorkQueue.take (3 samples, 6.00%)</title><rect x="1119.2" y="867.0" width="70.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1122.2" y="878.0">Schedule..</text>
</g>
<g>
<title>AbstractQueuedSynchronizer$ConditionObject.awaitNanos (3 samples, 6.00%)</title><rect x="1119.2" y="851.0" width="70.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1122.2" y="862.0">Abstract..</text>
</g>
<g>
<title>LockSupport.parkNanos (2 samples, 4.00%)</title><rect x="1119.2" y="835.0" width="47.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1122.2" y="846.0">Lock..</text>
</g>
<g>
<title>Unsafe.park (2 samples, 4.00%)</title><rect x="1119.2" y="819.0" width="47.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1122.2" y="830.0">Unsa..</text>
</g>
<g>
<title>Unsafe_Park (2 samples, 4.00%)</title><rect x="1119.2" y="803.0" width="47.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1122.2" y="814.0">Unsa..</text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 2.00%)</title><rect x="1119.2" y="787.0" width="23.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1122.2" y="798.0">P..</text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 2.00%)</title><rect x="1142.8" y="787.0" width="23.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1145.8" y="798.0">_..</text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 2.00%)</title><rect x="1166.4" y="835.0" width="23.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1169.4" y="846.0">o..</text>
</g>
</g>
</svg>
