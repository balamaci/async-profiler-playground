<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="581"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="581"> </text>
<g id="frames">
<g>
<title>all (2,068 samples, 100.00%)</title><rect x="10.0" y="547.0" width="1180.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="13.0" y="558.0">all</text>
</g>
<g>
<title>AppMainV2.main (1,545 samples, 74.71%)</title><rect x="10.0" y="531.0" width="881.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="542.0">AppMainV2.main</text>
</g>
<g>
<title>Method.invoke (1,545 samples, 74.71%)</title><rect x="10.0" y="515.0" width="881.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="526.0">Method.invoke</text>
</g>
<g>
<title>DelegatingMethodAccessorImpl.invoke (1,545 samples, 74.71%)</title><rect x="10.0" y="499.0" width="881.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="510.0">DelegatingMethodAccessorImpl.invoke</text>
</g>
<g>
<title>NativeMethodAccessorImpl.invoke (1,545 samples, 74.71%)</title><rect x="10.0" y="483.0" width="881.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="494.0">NativeMethodAccessorImpl.invoke</text>
</g>
<g>
<title>NativeMethodAccessorImpl.invoke0 (1,545 samples, 74.71%)</title><rect x="10.0" y="467.0" width="881.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="478.0">NativeMethodAccessorImpl.invoke0</text>
</g>
<g>
<title>MappedFileTest.main (1,545 samples, 74.71%)</title><rect x="10.0" y="451.0" width="881.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="462.0">MappedFileTest.main</text>
</g>
<g>
<title>ByteBuffer.put (3 samples, 0.15%)</title><rect x="124.1" y="435.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="127.1" y="446.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.15%)</title><rect x="124.1" y="419.0" width="1.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="127.1" y="430.0"></text>
</g>
<g>
<title>page_fault (3 samples, 0.15%)</title><rect x="124.1" y="403.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="127.1" y="414.0"></text>
</g>
<g>
<title>do_page_fault (3 samples, 0.15%)</title><rect x="124.1" y="387.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="127.1" y="398.0"></text>
</g>
<g>
<title>__do_page_fault (3 samples, 0.15%)</title><rect x="124.1" y="371.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="127.1" y="382.0"></text>
</g>
<g>
<title>do_user_addr_fault (3 samples, 0.15%)</title><rect x="124.1" y="355.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="127.1" y="366.0"></text>
</g>
<g>
<title>handle_mm_fault (3 samples, 0.15%)</title><rect x="124.1" y="339.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="127.1" y="350.0"></text>
</g>
<g>
<title>__handle_mm_fault (3 samples, 0.15%)</title><rect x="124.1" y="323.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="127.1" y="334.0"></text>
</g>
<g>
<title>do_fault (3 samples, 0.15%)</title><rect x="124.1" y="307.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="127.1" y="318.0"></text>
</g>
<g>
<title>__do_fault (3 samples, 0.15%)</title><rect x="124.1" y="291.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="127.1" y="302.0"></text>
</g>
<g>
<title>ext4_filemap_fault (3 samples, 0.15%)</title><rect x="124.1" y="275.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="127.1" y="286.0"></text>
</g>
<g>
<title>filemap_fault (3 samples, 0.15%)</title><rect x="124.1" y="259.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="127.1" y="270.0"></text>
</g>
<g>
<title>page_cache_async_readahead (3 samples, 0.15%)</title><rect x="124.1" y="243.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="127.1" y="254.0"></text>
</g>
<g>
<title>ondemand_readahead (3 samples, 0.15%)</title><rect x="124.1" y="227.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="127.1" y="238.0"></text>
</g>
<g>
<title>__do_page_cache_readahead (3 samples, 0.15%)</title><rect x="124.1" y="211.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="127.1" y="222.0"></text>
</g>
<g>
<title>read_pages (2 samples, 0.10%)</title><rect x="124.1" y="195.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="127.1" y="206.0"></text>
</g>
<g>
<title>ext4_readpages (2 samples, 0.10%)</title><rect x="124.1" y="179.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="127.1" y="190.0"></text>
</g>
<g>
<title>ext4_mpage_readpages (2 samples, 0.10%)</title><rect x="124.1" y="163.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="127.1" y="174.0"></text>
</g>
<g>
<title>add_to_page_cache_lru (1 samples, 0.05%)</title><rect x="124.7" y="147.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="127.7" y="158.0"></text>
</g>
<g>
<title>lru_cache_add (1 samples, 0.05%)</title><rect x="124.7" y="131.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="127.7" y="142.0"></text>
</g>
<g>
<title>__lru_cache_add (1 samples, 0.05%)</title><rect x="124.7" y="115.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="127.7" y="126.0"></text>
</g>
<g>
<title>pagevec_lru_move_fn (1 samples, 0.05%)</title><rect x="124.7" y="99.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="127.7" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="124.7" y="83.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="127.7" y="94.0"></text>
</g>
<g>
<title>xa_load (1 samples, 0.05%)</title><rect x="125.3" y="195.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="128.3" y="206.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.05%)</title><rect x="125.3" y="179.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="128.3" y="190.0"></text>
</g>
<g>
<title>File.delete (3 samples, 0.15%)</title><rect x="125.8" y="435.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="128.8" y="446.0"></text>
</g>
<g>
<title>UnixFileSystem.delete (3 samples, 0.15%)</title><rect x="125.8" y="419.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="128.8" y="430.0"></text>
</g>
<g>
<title>UnixFileSystem.delete0 (3 samples, 0.15%)</title><rect x="125.8" y="403.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="128.8" y="414.0"></text>
</g>
<g>
<title>Java_java_io_UnixFileSystem_delete0 (1 samples, 0.05%)</title><rect x="125.8" y="387.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="128.8" y="398.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;401526ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 401526ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.05%)</title><rect x="125.8" y="371.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="128.8" y="382.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.10%)</title><rect x="126.4" y="387.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="129.4" y="398.0"></text>
</g>
<g>
<title>unlink (2 samples, 0.10%)</title><rect x="126.4" y="371.0" width="1.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="129.4" y="382.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.10%)</title><rect x="126.4" y="355.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="129.4" y="366.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.10%)</title><rect x="126.4" y="339.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="129.4" y="350.0"></text>
</g>
<g>
<title>__x64_sys_unlink (2 samples, 0.10%)</title><rect x="126.4" y="323.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="129.4" y="334.0"></text>
</g>
<g>
<title>do_unlinkat (2 samples, 0.10%)</title><rect x="126.4" y="307.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="129.4" y="318.0"></text>
</g>
<g>
<title>filename_parentat.isra.0 (1 samples, 0.05%)</title><rect x="126.4" y="291.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="129.4" y="302.0"></text>
</g>
<g>
<title>path_parentat.isra.0 (1 samples, 0.05%)</title><rect x="126.4" y="275.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="129.4" y="286.0"></text>
</g>
<g>
<title>link_path_walk.part.0 (1 samples, 0.05%)</title><rect x="126.4" y="259.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="129.4" y="270.0"></text>
</g>
<g>
<title>inode_permission (1 samples, 0.05%)</title><rect x="126.4" y="243.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="129.4" y="254.0"></text>
</g>
<g>
<title>lockref_put_return (1 samples, 0.05%)</title><rect x="127.0" y="291.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="130.0" y="302.0"></text>
</g>
<g>
<title>FileChannelImpl.map (6 samples, 0.29%)</title><rect x="127.5" y="435.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="130.5" y="446.0"></text>
</g>
<g>
<title>FileChannelImpl.mapInternal (6 samples, 0.29%)</title><rect x="127.5" y="419.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="130.5" y="430.0"></text>
</g>
<g>
<title>FileChannelImpl.map0 (4 samples, 0.19%)</title><rect x="127.5" y="403.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="130.5" y="414.0"></text>
</g>
<g>
<title>mmap (4 samples, 0.19%)</title><rect x="127.5" y="387.0" width="2.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="130.5" y="398.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.19%)</title><rect x="127.5" y="371.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="130.5" y="382.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.19%)</title><rect x="127.5" y="355.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="130.5" y="366.0"></text>
</g>
<g>
<title>__x64_sys_mmap (4 samples, 0.19%)</title><rect x="127.5" y="339.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="130.5" y="350.0"></text>
</g>
<g>
<title>ksys_mmap_pgoff (4 samples, 0.19%)</title><rect x="127.5" y="323.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="130.5" y="334.0"></text>
</g>
<g>
<title>vm_mmap_pgoff (3 samples, 0.15%)</title><rect x="128.1" y="307.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="131.1" y="318.0"></text>
</g>
<g>
<title>do_mmap (3 samples, 0.15%)</title><rect x="128.1" y="291.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="131.1" y="302.0"></text>
</g>
<g>
<title>mmap_region (2 samples, 0.10%)</title><rect x="128.7" y="275.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="131.7" y="286.0"></text>
</g>
<g>
<title>vm_area_alloc (2 samples, 0.10%)</title><rect x="128.7" y="259.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="131.7" y="270.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.05%)</title><rect x="129.3" y="243.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="132.3" y="254.0"></text>
</g>
<g>
<title>FileDispatcherImpl.truncate (1 samples, 0.05%)</title><rect x="129.8" y="403.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="132.8" y="414.0"></text>
</g>
<g>
<title>FileDispatcherImpl.truncate0 (1 samples, 0.05%)</title><rect x="129.8" y="387.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.8" y="398.0"></text>
</g>
<g>
<title>ftruncate (1 samples, 0.05%)</title><rect x="129.8" y="371.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="132.8" y="382.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="129.8" y="355.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="132.8" y="366.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="129.8" y="339.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="132.8" y="350.0"></text>
</g>
<g>
<title>__x64_sys_ftruncate (1 samples, 0.05%)</title><rect x="129.8" y="323.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="132.8" y="334.0"></text>
</g>
<g>
<title>do_sys_ftruncate (1 samples, 0.05%)</title><rect x="129.8" y="307.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="132.8" y="318.0"></text>
</g>
<g>
<title>do_truncate (1 samples, 0.05%)</title><rect x="129.8" y="291.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="132.8" y="302.0"></text>
</g>
<g>
<title>notify_change (1 samples, 0.05%)</title><rect x="129.8" y="275.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="132.8" y="286.0"></text>
</g>
<g>
<title>ext4_setattr (1 samples, 0.05%)</title><rect x="129.8" y="259.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="132.8" y="270.0"></text>
</g>
<g>
<title>truncate_pagecache (1 samples, 0.05%)</title><rect x="129.8" y="243.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="132.8" y="254.0"></text>
</g>
<g>
<title>truncate_inode_pages_range (1 samples, 0.05%)</title><rect x="129.8" y="227.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="132.8" y="238.0"></text>
</g>
<g>
<title>NativeThreadSet.add (1 samples, 0.05%)</title><rect x="130.4" y="403.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="133.4" y="414.0"></text>
</g>
<g>
<title>NativeThread.current (1 samples, 0.05%)</title><rect x="130.4" y="387.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="133.4" y="398.0"></text>
</g>
<g>
<title>pthread_self@plt (1 samples, 0.05%)</title><rect x="130.4" y="371.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="133.4" y="382.0"></text>
</g>
<g>
<title>RandomAccessFile.&lt;init&gt; (2 samples, 0.10%)</title><rect x="131.0" y="435.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="134.0" y="446.0"></text>
</g>
<g>
<title>RandomAccessFile.&lt;init&gt; (2 samples, 0.10%)</title><rect x="131.0" y="419.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="134.0" y="430.0"></text>
</g>
<g>
<title>RandomAccessFile.open (2 samples, 0.10%)</title><rect x="131.0" y="403.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="134.0" y="414.0"></text>
</g>
<g>
<title>RandomAccessFile.open0 (2 samples, 0.10%)</title><rect x="131.0" y="387.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="134.0" y="398.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.10%)</title><rect x="131.0" y="371.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="134.0" y="382.0"></text>
</g>
<g>
<title>__open64 (2 samples, 0.10%)</title><rect x="131.0" y="355.0" width="1.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="134.0" y="366.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.10%)</title><rect x="131.0" y="339.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="134.0" y="350.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.10%)</title><rect x="131.0" y="323.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="134.0" y="334.0"></text>
</g>
<g>
<title>__x64_sys_openat (2 samples, 0.10%)</title><rect x="131.0" y="307.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="134.0" y="318.0"></text>
</g>
<g>
<title>do_sys_open (2 samples, 0.10%)</title><rect x="131.0" y="291.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="134.0" y="302.0"></text>
</g>
<g>
<title>do_filp_open (2 samples, 0.10%)</title><rect x="131.0" y="275.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="134.0" y="286.0"></text>
</g>
<g>
<title>path_openat (2 samples, 0.10%)</title><rect x="131.0" y="259.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="134.0" y="270.0"></text>
</g>
<g>
<title>do_last (2 samples, 0.10%)</title><rect x="131.0" y="243.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="134.0" y="254.0"></text>
</g>
<g>
<title>lookup_open (1 samples, 0.05%)</title><rect x="131.0" y="227.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="134.0" y="238.0"></text>
</g>
<g>
<title>ext4_create (1 samples, 0.05%)</title><rect x="131.0" y="211.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="134.0" y="222.0"></text>
</g>
<g>
<title>__ext4_new_inode (1 samples, 0.05%)</title><rect x="131.0" y="195.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="134.0" y="206.0"></text>
</g>
<g>
<title>vfs_open (1 samples, 0.05%)</title><rect x="131.5" y="227.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="134.5" y="238.0"></text>
</g>
<g>
<title>do_dentry_open (1 samples, 0.05%)</title><rect x="131.5" y="211.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="134.5" y="222.0"></text>
</g>
<g>
<title>ext4_file_open (1 samples, 0.05%)</title><rect x="131.5" y="195.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="134.5" y="206.0"></text>
</g>
<g>
<title>String.getBytes (168 samples, 8.12%)</title><rect x="132.1" y="435.0" width="95.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="135.1" y="446.0">String.getB..</text>
</g>
<g>
<title>StringCoding.encode (168 samples, 8.12%)</title><rect x="132.1" y="419.0" width="95.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="135.1" y="430.0">StringCodin..</text>
</g>
<g>
<title>StringCoding.encodeUTF8 (168 samples, 8.12%)</title><rect x="132.1" y="403.0" width="95.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="135.1" y="414.0">StringCodin..</text>
</g>
<g>
<title>Arrays.copyOf (168 samples, 8.12%)</title><rect x="132.1" y="387.0" width="95.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="135.1" y="398.0">Arrays.copyOf</text>
</g>
<g>
<title>String.valueOf (15 samples, 0.73%)</title><rect x="219.4" y="371.0" width="8.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="222.4" y="382.0"></text>
</g>
<g>
<title>String.valueOf (642 samples, 31.04%)</title><rect x="228.0" y="435.0" width="366.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="231.0" y="446.0">String.valueOf</text>
</g>
<g>
<title>Long.toString (642 samples, 31.04%)</title><rect x="228.0" y="419.0" width="366.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="231.0" y="430.0">Long.toString</text>
</g>
<g>
<title>Long.getChars (554 samples, 26.79%)</title><rect x="268.5" y="403.0" width="316.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="271.5" y="414.0">Long.getChars</text>
</g>
<g>
<title>Long.stringSize (11 samples, 0.53%)</title><rect x="584.6" y="403.0" width="6.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="587.6" y="414.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.15%)</title><rect x="590.9" y="403.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="593.9" y="414.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.15%)</title><rect x="590.9" y="387.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="593.9" y="398.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.15%)</title><rect x="590.9" y="371.0" width="1.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="593.9" y="382.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.15%)</title><rect x="590.9" y="355.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="593.9" y="366.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.05%)</title><rect x="590.9" y="339.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="593.9" y="350.0"></text>
</g>
<g>
<title>G1NUMA::index_of_current_thread() const (1 samples, 0.05%)</title><rect x="591.4" y="339.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="594.4" y="350.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::retire_before_allocation() (1 samples, 0.05%)</title><rect x="592.0" y="339.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="595.0" y="350.0"></text>
</g>
<g>
<title>CollectedHeap::tlab_alloc_reserve() const (1 samples, 0.05%)</title><rect x="592.0" y="323.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="595.0" y="334.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.15%)</title><rect x="592.6" y="403.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="595.6" y="414.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.15%)</title><rect x="592.6" y="387.0" width="1.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="595.6" y="398.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.15%)</title><rect x="592.6" y="371.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="595.6" y="382.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.15%)</title><rect x="592.6" y="355.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="595.6" y="366.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.05%)</title><rect x="592.6" y="339.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="595.6" y="350.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.05%)</title><rect x="592.6" y="323.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="595.6" y="334.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.05%)</title><rect x="592.6" y="307.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="595.6" y="318.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool, unsigned int) (1 samples, 0.05%)</title><rect x="592.6" y="291.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="595.6" y="302.0"></text>
</g>
<g>
<title>G1RemSetTrackingPolicy::update_at_allocate(HeapRegion*) (1 samples, 0.05%)</title><rect x="592.6" y="275.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="595.6" y="286.0"></text>
</g>
<g>
<title>G1FromCardCache::clear(unsigned int) (1 samples, 0.05%)</title><rect x="592.6" y="259.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="595.6" y="270.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWordImpl**, HeapWordImpl**, unsigned long) (1 samples, 0.05%)</title><rect x="593.2" y="339.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="596.2" y="350.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::retire_before_allocation() (1 samples, 0.05%)</title><rect x="593.7" y="339.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="596.7" y="350.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.05%)</title><rect x="593.7" y="323.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="596.7" y="334.0"></text>
</g>
<g>
<title>clock_gettime (22 samples, 1.06%)</title><rect x="594.3" y="435.0" width="12.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="597.3" y="446.0"></text>
</g>
<g>
<title>jbyte_arraycopy (13 samples, 0.63%)</title><rect x="606.8" y="435.0" width="7.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="609.8" y="446.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (310 samples, 14.99%)</title><rect x="614.3" y="435.0" width="176.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="617.3" y="446.0">jbyte_disjoint_arraycopy</text>
</g>
<g>
<title>page_fault (199 samples, 9.62%)</title><rect x="677.6" y="419.0" width="113.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="680.6" y="430.0">page_fault</text>
</g>
<g>
<title>do_page_fault (199 samples, 9.62%)</title><rect x="677.6" y="403.0" width="113.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="680.6" y="414.0">do_page_fault</text>
</g>
<g>
<title>__do_page_fault (199 samples, 9.62%)</title><rect x="677.6" y="387.0" width="113.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="680.6" y="398.0">__do_page_fault</text>
</g>
<g>
<title>do_user_addr_fault (199 samples, 9.62%)</title><rect x="677.6" y="371.0" width="113.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="680.6" y="382.0">do_user_addr_f..</text>
</g>
<g>
<title>down_read_trylock (1 samples, 0.05%)</title><rect x="688.4" y="355.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="691.4" y="366.0"></text>
</g>
<g>
<title>find_vma (3 samples, 0.15%)</title><rect x="689.0" y="355.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="692.0" y="366.0"></text>
</g>
<g>
<title>vmacache_find (3 samples, 0.15%)</title><rect x="689.0" y="339.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="692.0" y="350.0"></text>
</g>
<g>
<title>handle_mm_fault (176 samples, 8.51%)</title><rect x="690.7" y="355.0" width="100.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="693.7" y="366.0">handle_mm_fa..</text>
</g>
<g>
<title>__handle_mm_fault (170 samples, 8.22%)</title><rect x="693.6" y="339.0" width="97.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="696.6" y="350.0">__handle_mm..</text>
</g>
<g>
<title>do_fault (164 samples, 7.93%)</title><rect x="697.0" y="323.0" width="93.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="700.0" y="334.0">do_fault</text>
</g>
<g>
<title>__do_fault (82 samples, 3.97%)</title><rect x="697.0" y="307.0" width="46.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="700.0" y="318.0">__do..</text>
</g>
<g>
<title>ext4_filemap_fault (81 samples, 3.92%)</title><rect x="697.0" y="291.0" width="46.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="700.0" y="302.0">ext4..</text>
</g>
<g>
<title>down_read (1 samples, 0.05%)</title><rect x="697.6" y="275.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="700.6" y="286.0"></text>
</g>
<g>
<title>filemap_fault (79 samples, 3.82%)</title><rect x="698.1" y="275.0" width="45.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="701.1" y="286.0">file..</text>
</g>
<g>
<title>__do_page_cache_readahead (4 samples, 0.19%)</title><rect x="698.1" y="259.0" width="2.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="701.1" y="270.0"></text>
</g>
<g>
<title>__page_cache_alloc (4 samples, 0.19%)</title><rect x="698.1" y="243.0" width="2.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="701.1" y="254.0"></text>
</g>
<g>
<title>alloc_pages_current (3 samples, 0.15%)</title><rect x="698.1" y="227.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="701.1" y="238.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (3 samples, 0.15%)</title><rect x="698.1" y="211.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="701.1" y="222.0"></text>
</g>
<g>
<title>get_page_from_freelist (3 samples, 0.15%)</title><rect x="698.1" y="195.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="701.1" y="206.0"></text>
</g>
<g>
<title>clear_page_erms (3 samples, 0.15%)</title><rect x="698.1" y="179.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="701.1" y="190.0"></text>
</g>
<g>
<title>policy_node (1 samples, 0.05%)</title><rect x="699.9" y="227.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="702.9" y="238.0"></text>
</g>
<g>
<title>page_cache_async_readahead (70 samples, 3.38%)</title><rect x="700.4" y="259.0" width="40.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="703.4" y="270.0">pag..</text>
</g>
<g>
<title>ondemand_readahead (70 samples, 3.38%)</title><rect x="700.4" y="243.0" width="40.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="703.4" y="254.0">ond..</text>
</g>
<g>
<title>__do_page_cache_readahead (69 samples, 3.34%)</title><rect x="700.4" y="227.0" width="39.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="703.4" y="238.0">__d..</text>
</g>
<g>
<title>__page_cache_alloc (31 samples, 1.50%)</title><rect x="701.6" y="211.0" width="17.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="704.6" y="222.0"></text>
</g>
<g>
<title>alloc_pages_current (30 samples, 1.45%)</title><rect x="702.1" y="195.0" width="17.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="705.1" y="206.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (27 samples, 1.31%)</title><rect x="702.1" y="179.0" width="15.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="705.1" y="190.0"></text>
</g>
<g>
<title>get_page_from_freelist (27 samples, 1.31%)</title><rect x="702.1" y="163.0" width="15.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="705.1" y="174.0"></text>
</g>
<g>
<title>clear_page_erms (17 samples, 0.82%)</title><rect x="702.1" y="147.0" width="9.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="705.1" y="158.0"></text>
</g>
<g>
<title>page_poisoning_enabled (1 samples, 0.05%)</title><rect x="711.8" y="147.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="714.8" y="158.0"></text>
</g>
<g>
<title>prep_new_page (2 samples, 0.10%)</title><rect x="712.4" y="147.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="715.4" y="158.0"></text>
</g>
<g>
<title>rmqueue (7 samples, 0.34%)</title><rect x="713.5" y="147.0" width="4.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="716.5" y="158.0"></text>
</g>
<g>
<title>get_task_policy.part.0 (1 samples, 0.05%)</title><rect x="717.5" y="179.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="720.5" y="190.0"></text>
</g>
<g>
<title>policy_nodemask (2 samples, 0.10%)</title><rect x="718.1" y="179.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="721.1" y="190.0"></text>
</g>
<g>
<title>blk_start_plug (1 samples, 0.05%)</title><rect x="719.3" y="211.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="722.3" y="222.0"></text>
</g>
<g>
<title>read_pages (31 samples, 1.50%)</title><rect x="719.8" y="211.0" width="17.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="722.8" y="222.0"></text>
</g>
<g>
<title>ext4_readpages (31 samples, 1.50%)</title><rect x="719.8" y="195.0" width="17.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="722.8" y="206.0"></text>
</g>
<g>
<title>ext4_mpage_readpages (31 samples, 1.50%)</title><rect x="719.8" y="179.0" width="17.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="722.8" y="190.0"></text>
</g>
<g>
<title>add_to_page_cache_lru (13 samples, 0.63%)</title><rect x="727.8" y="163.0" width="7.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="730.8" y="174.0"></text>
</g>
<g>
<title>__add_to_page_cache_locked (8 samples, 0.39%)</title><rect x="727.8" y="147.0" width="4.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="730.8" y="158.0"></text>
</g>
<g>
<title>mem_cgroup_commit_charge (1 samples, 0.05%)</title><rect x="730.1" y="131.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="733.1" y="142.0"></text>
</g>
<g>
<title>mem_cgroup_try_charge (3 samples, 0.15%)</title><rect x="730.7" y="131.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="733.7" y="142.0"></text>
</g>
<g>
<title>try_charge (3 samples, 0.15%)</title><rect x="730.7" y="115.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="733.7" y="126.0"></text>
</g>
<g>
<title>lru_cache_add (5 samples, 0.24%)</title><rect x="732.4" y="147.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="735.4" y="158.0"></text>
</g>
<g>
<title>__lru_cache_add (5 samples, 0.24%)</title><rect x="732.4" y="131.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="735.4" y="142.0"></text>
</g>
<g>
<title>pagevec_lru_move_fn (5 samples, 0.24%)</title><rect x="732.4" y="115.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="735.4" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.15%)</title><rect x="732.4" y="99.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="735.4" y="110.0"></text>
</g>
<g>
<title>release_pages (2 samples, 0.10%)</title><rect x="734.1" y="99.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="737.1" y="110.0"></text>
</g>
<g>
<title>free_unref_page_list (1 samples, 0.05%)</title><rect x="734.7" y="83.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="737.7" y="94.0"></text>
</g>
<g>
<title>ext4_map_blocks (4 samples, 0.19%)</title><rect x="735.2" y="163.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="738.2" y="174.0"></text>
</g>
<g>
<title>_raw_read_lock (1 samples, 0.05%)</title><rect x="735.2" y="147.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="738.2" y="158.0"></text>
</g>
<g>
<title>ext4_es_lookup_extent (3 samples, 0.15%)</title><rect x="735.8" y="147.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="738.8" y="158.0"></text>
</g>
<g>
<title>percpu_counter_add_batch (1 samples, 0.05%)</title><rect x="736.9" y="131.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="739.9" y="142.0"></text>
</g>
<g>
<title>xa_load (4 samples, 0.19%)</title><rect x="737.5" y="211.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="740.5" y="222.0"></text>
</g>
<g>
<title>xas_start (1 samples, 0.05%)</title><rect x="739.2" y="195.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="742.2" y="206.0"></text>
</g>
<g>
<title>read_pages (1 samples, 0.05%)</title><rect x="739.8" y="227.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="742.8" y="238.0"></text>
</g>
<g>
<title>pagecache_get_page (5 samples, 0.24%)</title><rect x="740.4" y="259.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="743.4" y="270.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.24%)</title><rect x="740.4" y="243.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="743.4" y="254.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.10%)</title><rect x="742.1" y="227.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="745.1" y="238.0"></text>
</g>
<g>
<title>up_read (1 samples, 0.05%)</title><rect x="743.2" y="291.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="746.2" y="302.0"></text>
</g>
<g>
<title>do_page_mkwrite (74 samples, 3.58%)</title><rect x="743.8" y="307.0" width="42.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="746.8" y="318.0">do_p..</text>
</g>
<g>
<title>ext4_page_mkwrite (72 samples, 3.48%)</title><rect x="744.4" y="291.0" width="41.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="747.4" y="302.0">ext..</text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.05%)</title><rect x="744.4" y="275.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="747.4" y="286.0"></text>
</g>
<g>
<title>block_page_mkwrite (67 samples, 3.24%)</title><rect x="744.9" y="275.0" width="38.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="747.9" y="286.0">blo..</text>
</g>
<g>
<title>__block_commit_write.isra.0 (1 samples, 0.05%)</title><rect x="745.5" y="259.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="748.5" y="270.0"></text>
</g>
<g>
<title>__block_write_begin_int (62 samples, 3.00%)</title><rect x="746.1" y="259.0" width="35.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="749.1" y="270.0">__b..</text>
</g>
<g>
<title>clean_bdev_aliases (1 samples, 0.05%)</title><rect x="747.8" y="243.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="750.8" y="254.0"></text>
</g>
<g>
<title>pagevec_lookup_range (1 samples, 0.05%)</title><rect x="747.8" y="227.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="750.8" y="238.0"></text>
</g>
<g>
<title>find_get_pages_range (1 samples, 0.05%)</title><rect x="747.8" y="211.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="750.8" y="222.0"></text>
</g>
<g>
<title>create_page_buffers (18 samples, 0.87%)</title><rect x="748.4" y="243.0" width="10.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="751.4" y="254.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.05%)</title><rect x="748.4" y="227.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="751.4" y="238.0"></text>
</g>
<g>
<title>create_empty_buffers (17 samples, 0.82%)</title><rect x="748.9" y="227.0" width="9.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="751.9" y="238.0"></text>
</g>
<g>
<title>alloc_page_buffers (14 samples, 0.68%)</title><rect x="750.6" y="211.0" width="8.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="753.6" y="222.0"></text>
</g>
<g>
<title>alloc_buffer_head (13 samples, 0.63%)</title><rect x="751.2" y="195.0" width="7.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="754.2" y="206.0"></text>
</g>
<g>
<title>kmem_cache_alloc (13 samples, 0.63%)</title><rect x="751.2" y="179.0" width="7.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="754.2" y="190.0"></text>
</g>
<g>
<title>__slab_alloc (8 samples, 0.39%)</title><rect x="752.9" y="163.0" width="4.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="755.9" y="174.0"></text>
</g>
<g>
<title>___slab_alloc (3 samples, 0.15%)</title><rect x="755.8" y="147.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="758.8" y="158.0"></text>
</g>
<g>
<title>new_slab (3 samples, 0.15%)</title><rect x="755.8" y="131.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="758.8" y="142.0"></text>
</g>
<g>
<title>allocate_slab (3 samples, 0.15%)</title><rect x="755.8" y="115.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="758.8" y="126.0"></text>
</g>
<g>
<title>alloc_slab_page (2 samples, 0.10%)</title><rect x="756.3" y="99.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="759.3" y="110.0"></text>
</g>
<g>
<title>alloc_pages_current (2 samples, 0.10%)</title><rect x="756.3" y="83.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="759.3" y="94.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (2 samples, 0.10%)</title><rect x="756.3" y="67.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="759.3" y="78.0"></text>
</g>
<g>
<title>get_page_from_freelist (2 samples, 0.10%)</title><rect x="756.3" y="51.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="759.3" y="62.0"></text>
</g>
<g>
<title>clear_page_erms (1 samples, 0.05%)</title><rect x="756.9" y="35.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="759.9" y="46.0"></text>
</g>
<g>
<title>memcg_kmem_get_cache (2 samples, 0.10%)</title><rect x="757.5" y="163.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="760.5" y="174.0"></text>
</g>
<g>
<title>ext4_da_get_block_prep (19 samples, 0.92%)</title><rect x="758.6" y="243.0" width="10.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="761.6" y="254.0"></text>
</g>
<g>
<title>ext4_da_map_blocks.constprop.0 (15 samples, 0.73%)</title><rect x="758.6" y="227.0" width="8.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="761.6" y="238.0"></text>
</g>
<g>
<title>_raw_read_lock (2 samples, 0.10%)</title><rect x="759.8" y="211.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="762.8" y="222.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.10%)</title><rect x="760.9" y="211.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="763.9" y="222.0"></text>
</g>
<g>
<title>_raw_write_lock (1 samples, 0.05%)</title><rect x="762.1" y="211.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="765.1" y="222.0"></text>
</g>
<g>
<title>ext4_da_reserve_space (4 samples, 0.19%)</title><rect x="762.6" y="211.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="765.6" y="222.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.05%)</title><rect x="763.2" y="195.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="766.2" y="206.0"></text>
</g>
<g>
<title>ext4_claim_free_clusters (1 samples, 0.05%)</title><rect x="763.8" y="195.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="766.8" y="206.0"></text>
</g>
<g>
<title>ext4_has_free_clusters (1 samples, 0.05%)</title><rect x="763.8" y="179.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="766.8" y="190.0"></text>
</g>
<g>
<title>inode_reserved_space (1 samples, 0.05%)</title><rect x="764.3" y="195.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="767.3" y="206.0"></text>
</g>
<g>
<title>ext4_es_insert_delayed_block (1 samples, 0.05%)</title><rect x="764.9" y="211.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="767.9" y="222.0"></text>
</g>
<g>
<title>ext4_es_lookup_extent (3 samples, 0.15%)</title><rect x="765.5" y="211.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="768.5" y="222.0"></text>
</g>
<g>
<title>percpu_counter_add_batch (1 samples, 0.05%)</title><rect x="766.6" y="195.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="769.6" y="206.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="766.6" y="179.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="769.6" y="190.0"></text>
</g>
<g>
<title>up_read (4 samples, 0.19%)</title><rect x="767.2" y="227.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="770.2" y="238.0"></text>
</g>
<g>
<title>mark_buffer_dirty (21 samples, 1.02%)</title><rect x="769.5" y="243.0" width="12.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="772.5" y="254.0"></text>
</g>
<g>
<title>__mark_inode_dirty (2 samples, 0.10%)</title><rect x="771.2" y="227.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="774.2" y="238.0"></text>
</g>
<g>
<title>__set_page_dirty (15 samples, 0.73%)</title><rect x="772.3" y="227.0" width="8.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="775.3" y="238.0"></text>
</g>
<g>
<title>__lock_text_start (15 samples, 0.73%)</title><rect x="772.3" y="211.0" width="8.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="775.3" y="222.0"></text>
</g>
<g>
<title>page_mapping (1 samples, 0.05%)</title><rect x="780.9" y="227.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="783.9" y="238.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.05%)</title><rect x="781.5" y="259.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="784.5" y="270.0"></text>
</g>
<g>
<title>set_page_dirty (2 samples, 0.10%)</title><rect x="782.0" y="259.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="785.0" y="270.0"></text>
</g>
<g>
<title>ext4_set_page_dirty (2 samples, 0.10%)</title><rect x="782.0" y="243.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="785.0" y="254.0"></text>
</g>
<g>
<title>__set_page_dirty_buffers (2 samples, 0.10%)</title><rect x="782.0" y="227.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="785.0" y="238.0"></text>
</g>
<g>
<title>__unlock_page_memcg (1 samples, 0.05%)</title><rect x="782.0" y="211.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="785.0" y="222.0"></text>
</g>
<g>
<title>page_mapping (1 samples, 0.05%)</title><rect x="782.6" y="211.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="785.6" y="222.0"></text>
</g>
<g>
<title>down_read (1 samples, 0.05%)</title><rect x="783.2" y="275.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="786.2" y="286.0"></text>
</g>
<g>
<title>ext4_convert_inline_data (1 samples, 0.05%)</title><rect x="783.7" y="275.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="786.7" y="286.0"></text>
</g>
<g>
<title>file_update_time (2 samples, 0.10%)</title><rect x="784.3" y="275.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="787.3" y="286.0"></text>
</g>
<g>
<title>generic_update_time (2 samples, 0.10%)</title><rect x="784.3" y="259.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="787.3" y="270.0"></text>
</g>
<g>
<title>__mark_inode_dirty (2 samples, 0.10%)</title><rect x="784.3" y="243.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="787.3" y="254.0"></text>
</g>
<g>
<title>ext4_dirty_inode (2 samples, 0.10%)</title><rect x="784.3" y="227.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="787.3" y="238.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (2 samples, 0.10%)</title><rect x="784.3" y="211.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="787.3" y="222.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.05%)</title><rect x="784.3" y="195.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="787.3" y="206.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.05%)</title><rect x="784.3" y="179.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="787.3" y="190.0"></text>
</g>
<g>
<title>map_id_up (1 samples, 0.05%)</title><rect x="784.3" y="163.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="787.3" y="174.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (1 samples, 0.05%)</title><rect x="784.9" y="195.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="787.9" y="206.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (1 samples, 0.05%)</title><rect x="784.9" y="179.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="787.9" y="190.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (1 samples, 0.05%)</title><rect x="784.9" y="163.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="787.9" y="174.0"></text>
</g>
<g>
<title>jbd2_write_access_granted (1 samples, 0.05%)</title><rect x="784.9" y="147.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="787.9" y="158.0"></text>
</g>
<g>
<title>up_read (1 samples, 0.05%)</title><rect x="785.4" y="291.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="788.4" y="302.0"></text>
</g>
<g>
<title>fault_dirty_shared_page (4 samples, 0.19%)</title><rect x="786.0" y="307.0" width="2.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="789.0" y="318.0"></text>
</g>
<g>
<title>set_page_dirty (4 samples, 0.19%)</title><rect x="786.0" y="291.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="789.0" y="302.0"></text>
</g>
<g>
<title>ext4_set_page_dirty (4 samples, 0.19%)</title><rect x="786.0" y="275.0" width="2.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="789.0" y="286.0"></text>
</g>
<g>
<title>__set_page_dirty_buffers (1 samples, 0.05%)</title><rect x="786.0" y="259.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="789.0" y="270.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.05%)</title><rect x="786.6" y="259.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="789.6" y="270.0"></text>
</g>
<g>
<title>page_mapping (2 samples, 0.10%)</title><rect x="787.2" y="259.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="790.2" y="270.0"></text>
</g>
<g>
<title>finish_fault (4 samples, 0.19%)</title><rect x="788.3" y="307.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="791.3" y="318.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.10%)</title><rect x="788.3" y="291.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="791.3" y="302.0"></text>
</g>
<g>
<title>alloc_set_pte (2 samples, 0.10%)</title><rect x="789.4" y="291.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="792.4" y="302.0"></text>
</g>
<g>
<title>page_add_file_rmap (1 samples, 0.05%)</title><rect x="790.0" y="275.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="793.0" y="286.0"></text>
</g>
<g>
<title>mem_cgroup_from_task (1 samples, 0.05%)</title><rect x="790.6" y="339.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="793.6" y="350.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (61 samples, 2.95%)</title><rect x="791.2" y="435.0" width="34.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="794.2" y="446.0">jl..</text>
</g>
<g>
<title>os::javaTimeMillis() (86 samples, 4.16%)</title><rect x="826.0" y="435.0" width="49.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="829.0" y="446.0">os::j..</text>
</g>
<g>
<title>unsafe_arraycopy (29 samples, 1.40%)</title><rect x="875.0" y="435.0" width="16.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="878.0" y="446.0"></text>
</g>
<g>
<title>Reference$ReferenceHandler.run (69 samples, 3.34%)</title><rect x="891.6" y="531.0" width="39.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="894.6" y="542.0">Ref..</text>
</g>
<g>
<title>Reference.processPendingReferences (69 samples, 3.34%)</title><rect x="891.6" y="515.0" width="39.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="894.6" y="526.0">Ref..</text>
</g>
<g>
<title>Cleaner.clean (69 samples, 3.34%)</title><rect x="891.6" y="499.0" width="39.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="894.6" y="510.0">Cle..</text>
</g>
<g>
<title>FileChannelImpl$Unmapper.run (69 samples, 3.34%)</title><rect x="891.6" y="483.0" width="39.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="894.6" y="494.0">Fil..</text>
</g>
<g>
<title>FileChannelImpl$Unmapper.unmap (69 samples, 3.34%)</title><rect x="891.6" y="467.0" width="39.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="894.6" y="478.0">Fil..</text>
</g>
<g>
<title>FileChannelImpl.unmap0 (69 samples, 3.34%)</title><rect x="891.6" y="451.0" width="39.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="894.6" y="462.0">Fil..</text>
</g>
<g>
<title>munmap (69 samples, 3.34%)</title><rect x="891.6" y="435.0" width="39.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="894.6" y="446.0">mun..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (69 samples, 3.34%)</title><rect x="891.6" y="419.0" width="39.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="894.6" y="430.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (69 samples, 3.34%)</title><rect x="891.6" y="403.0" width="39.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="894.6" y="414.0">do_..</text>
</g>
<g>
<title>__x64_sys_munmap (25 samples, 1.21%)</title><rect x="891.6" y="387.0" width="14.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="894.6" y="398.0"></text>
</g>
<g>
<title>__vm_munmap (25 samples, 1.21%)</title><rect x="891.6" y="371.0" width="14.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="894.6" y="382.0"></text>
</g>
<g>
<title>__do_munmap (25 samples, 1.21%)</title><rect x="891.6" y="355.0" width="14.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="894.6" y="366.0"></text>
</g>
<g>
<title>unmap_region (25 samples, 1.21%)</title><rect x="891.6" y="339.0" width="14.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="894.6" y="350.0"></text>
</g>
<g>
<title>tlb_finish_mmu (2 samples, 0.10%)</title><rect x="891.6" y="323.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="894.6" y="334.0"></text>
</g>
<g>
<title>tlb_flush_mmu (2 samples, 0.10%)</title><rect x="891.6" y="307.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="894.6" y="318.0"></text>
</g>
<g>
<title>flush_tlb_mm_range (1 samples, 0.05%)</title><rect x="891.6" y="291.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="894.6" y="302.0"></text>
</g>
<g>
<title>free_pages_and_swap_cache (1 samples, 0.05%)</title><rect x="892.1" y="291.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="895.1" y="302.0"></text>
</g>
<g>
<title>release_pages (1 samples, 0.05%)</title><rect x="892.1" y="275.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="895.1" y="286.0"></text>
</g>
<g>
<title>free_unref_page_list (1 samples, 0.05%)</title><rect x="892.1" y="259.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="895.1" y="270.0"></text>
</g>
<g>
<title>unmap_vmas (23 samples, 1.11%)</title><rect x="892.7" y="323.0" width="13.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="895.7" y="334.0"></text>
</g>
<g>
<title>unmap_single_vma (23 samples, 1.11%)</title><rect x="892.7" y="307.0" width="13.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="895.7" y="318.0"></text>
</g>
<g>
<title>unmap_page_range (23 samples, 1.11%)</title><rect x="892.7" y="291.0" width="13.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="895.7" y="302.0"></text>
</g>
<g>
<title>zap_pte_range.isra.0 (23 samples, 1.11%)</title><rect x="892.7" y="275.0" width="13.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="895.7" y="286.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.05%)</title><rect x="897.3" y="259.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="900.3" y="270.0"></text>
</g>
<g>
<title>page_remove_rmap (1 samples, 0.05%)</title><rect x="897.9" y="259.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="900.9" y="270.0"></text>
</g>
<g>
<title>set_page_dirty (13 samples, 0.63%)</title><rect x="898.4" y="259.0" width="7.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="901.4" y="270.0"></text>
</g>
<g>
<title>ext4_set_page_dirty (13 samples, 0.63%)</title><rect x="898.4" y="243.0" width="7.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="901.4" y="254.0"></text>
</g>
<g>
<title>__set_page_dirty_buffers (11 samples, 0.53%)</title><rect x="899.0" y="227.0" width="6.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="902.0" y="238.0"></text>
</g>
<g>
<title>unlock_page_memcg (1 samples, 0.05%)</title><rect x="905.3" y="227.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="908.3" y="238.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (44 samples, 2.13%)</title><rect x="905.8" y="387.0" width="25.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="908.8" y="398.0">e..</text>
</g>
<g>
<title>task_work_run (44 samples, 2.13%)</title><rect x="905.8" y="371.0" width="25.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="908.8" y="382.0">t..</text>
</g>
<g>
<title>____fput (44 samples, 2.13%)</title><rect x="905.8" y="355.0" width="25.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="908.8" y="366.0">_..</text>
</g>
<g>
<title>__fput (44 samples, 2.13%)</title><rect x="905.8" y="339.0" width="25.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="908.8" y="350.0">_..</text>
</g>
<g>
<title>dput (44 samples, 2.13%)</title><rect x="905.8" y="323.0" width="25.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="908.8" y="334.0">d..</text>
</g>
<g>
<title>__dentry_kill (44 samples, 2.13%)</title><rect x="905.8" y="307.0" width="25.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="908.8" y="318.0">_..</text>
</g>
<g>
<title>dentry_unlink_inode (44 samples, 2.13%)</title><rect x="905.8" y="291.0" width="25.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="908.8" y="302.0">d..</text>
</g>
<g>
<title>iput (44 samples, 2.13%)</title><rect x="905.8" y="275.0" width="25.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="908.8" y="286.0">i..</text>
</g>
<g>
<title>evict (44 samples, 2.13%)</title><rect x="905.8" y="259.0" width="25.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="908.8" y="270.0">e..</text>
</g>
<g>
<title>ext4_evict_inode (44 samples, 2.13%)</title><rect x="905.8" y="243.0" width="25.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="908.8" y="254.0">e..</text>
</g>
<g>
<title>ext4_orphan_del (1 samples, 0.05%)</title><rect x="905.8" y="227.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="908.8" y="238.0"></text>
</g>
<g>
<title>truncate_inode_pages_final (43 samples, 2.08%)</title><rect x="906.4" y="227.0" width="24.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="909.4" y="238.0">t..</text>
</g>
<g>
<title>truncate_inode_pages_range (42 samples, 2.03%)</title><rect x="906.4" y="211.0" width="24.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="909.4" y="222.0">t..</text>
</g>
<g>
<title>__pagevec_release (13 samples, 0.63%)</title><rect x="907.0" y="195.0" width="7.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="910.0" y="206.0"></text>
</g>
<g>
<title>release_pages (13 samples, 0.63%)</title><rect x="907.0" y="179.0" width="7.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="910.0" y="190.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.24%)</title><rect x="907.0" y="163.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="910.0" y="174.0"></text>
</g>
<g>
<title>free_unref_page_list (6 samples, 0.29%)</title><rect x="909.8" y="163.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="912.8" y="174.0"></text>
</g>
<g>
<title>mem_cgroup_uncharge_list (2 samples, 0.10%)</title><rect x="913.3" y="163.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="916.3" y="174.0"></text>
</g>
<g>
<title>uncharge_batch (2 samples, 0.10%)</title><rect x="913.3" y="147.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="916.3" y="158.0"></text>
</g>
<g>
<title>delete_from_page_cache_batch (6 samples, 0.29%)</title><rect x="914.4" y="195.0" width="3.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="917.4" y="206.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.29%)</title><rect x="914.4" y="179.0" width="3.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="917.4" y="190.0"></text>
</g>
<g>
<title>page_cache_free_page.isra.0 (1 samples, 0.05%)</title><rect x="917.8" y="195.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="920.8" y="206.0"></text>
</g>
<g>
<title>pagevec_lookup_entries (3 samples, 0.15%)</title><rect x="918.4" y="195.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="921.4" y="206.0"></text>
</g>
<g>
<title>find_get_entries (3 samples, 0.15%)</title><rect x="918.4" y="179.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="921.4" y="190.0"></text>
</g>
<g>
<title>truncate_cleanup_page (18 samples, 0.87%)</title><rect x="920.1" y="195.0" width="10.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="923.1" y="206.0"></text>
</g>
<g>
<title>ext4_invalidatepage (18 samples, 0.87%)</title><rect x="920.1" y="179.0" width="10.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="923.1" y="190.0"></text>
</g>
<g>
<title>block_invalidatepage (16 samples, 0.77%)</title><rect x="921.2" y="163.0" width="9.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="924.2" y="174.0"></text>
</g>
<g>
<title>try_to_release_page (16 samples, 0.77%)</title><rect x="921.2" y="147.0" width="9.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="924.2" y="158.0"></text>
</g>
<g>
<title>ext4_releasepage (16 samples, 0.77%)</title><rect x="921.2" y="131.0" width="9.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="924.2" y="142.0"></text>
</g>
<g>
<title>jbd2_journal_grab_journal_head (1 samples, 0.05%)</title><rect x="921.2" y="115.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="924.2" y="126.0"></text>
</g>
<g>
<title>jbd2_journal_try_to_free_buffers (15 samples, 0.73%)</title><rect x="921.8" y="115.0" width="8.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="924.8" y="126.0"></text>
</g>
<g>
<title>jbd2_journal_grab_journal_head (2 samples, 0.10%)</title><rect x="921.8" y="99.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="924.8" y="110.0"></text>
</g>
<g>
<title>try_to_free_buffers (13 samples, 0.63%)</title><rect x="923.0" y="99.0" width="7.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="926.0" y="110.0"></text>
</g>
<g>
<title>__cancel_dirty_page (10 samples, 0.48%)</title><rect x="923.5" y="83.0" width="5.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="926.5" y="94.0"></text>
</g>
<g>
<title>account_page_cleaned (10 samples, 0.48%)</title><rect x="923.5" y="67.0" width="5.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="926.5" y="78.0"></text>
</g>
<g>
<title>dec_zone_page_state (2 samples, 0.10%)</title><rect x="927.5" y="51.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="930.5" y="62.0"></text>
</g>
<g>
<title>percpu_counter_add_batch (1 samples, 0.05%)</title><rect x="928.7" y="51.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="931.7" y="62.0"></text>
</g>
<g>
<title>drop_buffers (2 samples, 0.10%)</title><rect x="929.2" y="83.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="932.2" y="94.0"></text>
</g>
<g>
<title>unlock_page (1 samples, 0.05%)</title><rect x="930.4" y="211.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="933.4" y="222.0"></text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.05%)</title><rect x="930.9" y="531.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="933.9" y="542.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="930.9" y="515.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="933.9" y="526.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1 samples, 0.05%)</title><rect x="930.9" y="499.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="933.9" y="510.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.05%)</title><rect x="930.9" y="483.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="933.9" y="494.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.15%)</title><rect x="931.5" y="531.0" width="1.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="934.5" y="542.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.05%)</title><rect x="931.5" y="515.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="934.5" y="526.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.0 (2 samples, 0.10%)</title><rect x="932.1" y="515.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="935.1" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="932.7" y="499.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="935.7" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="932.7" y="483.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="935.7" y="494.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="932.7" y="467.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="935.7" y="478.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="932.7" y="451.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="935.7" y="462.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.05%)</title><rect x="932.7" y="435.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="935.7" y="446.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.05%)</title><rect x="932.7" y="419.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="935.7" y="430.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="932.7" y="403.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="935.7" y="414.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.05%)</title><rect x="932.7" y="387.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="935.7" y="398.0"></text>
</g>
<g>
<title>[unknown_Java] (437 samples, 21.13%)</title><rect x="933.2" y="531.0" width="249.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="936.2" y="542.0">[unknown_Java]</text>
</g>
<g>
<title>clock_gettime (437 samples, 21.13%)</title><rect x="933.2" y="515.0" width="249.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="936.2" y="526.0">clock_gettime</text>
</g>
<g>
<title>[vdso] (15 samples, 0.73%)</title><rect x="949.8" y="499.0" width="8.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="952.8" y="510.0"></text>
</g>
<g>
<title>clock_gettime (393 samples, 19.00%)</title><rect x="958.3" y="499.0" width="224.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="961.3" y="510.0">clock_gettime</text>
</g>
<g>
<title>[vdso] (346 samples, 16.73%)</title><rect x="985.2" y="483.0" width="197.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="988.2" y="494.0">[vdso]</text>
</g>
<g>
<title>clock_gettime (1 samples, 0.05%)</title><rect x="1182.6" y="531.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1185.6" y="542.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.05%)</title><rect x="1182.6" y="515.0" width="0.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1185.6" y="526.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="1182.6" y="499.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1185.6" y="510.0"></text>
</g>
<g>
<title>start_thread (12 samples, 0.58%)</title><rect x="1183.2" y="531.0" width="6.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1186.2" y="542.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (12 samples, 0.58%)</title><rect x="1183.2" y="515.0" width="6.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1186.2" y="526.0"></text>
</g>
<g>
<title>Thread::call_run() (12 samples, 0.58%)</title><rect x="1183.2" y="499.0" width="6.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.2" y="510.0"></text>
</g>
<g>
<title>GangWorker::loop() (7 samples, 0.34%)</title><rect x="1183.2" y="483.0" width="3.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1186.2" y="494.0"></text>
</g>
<g>
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (2 samples, 0.10%)</title><rect x="1183.7" y="467.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.7" y="478.0"></text>
</g>
<g>
<title>G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int) (2 samples, 0.10%)</title><rect x="1183.7" y="451.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.7" y="462.0"></text>
</g>
<g>
<title>G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases) (2 samples, 0.10%)</title><rect x="1183.7" y="435.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.7" y="446.0"></text>
</g>
<g>
<title>G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*) (2 samples, 0.10%)</title><rect x="1183.7" y="419.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.7" y="430.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWordImpl**, HeapWordImpl**, void const*) (2 samples, 0.10%)</title><rect x="1183.7" y="403.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.7" y="414.0"></text>
</g>
<g>
<title>G1PrepareEvacuationTask::work(unsigned int) (2 samples, 0.10%)</title><rect x="1184.9" y="467.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.9" y="478.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (2 samples, 0.10%)</title><rect x="1184.9" y="451.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.9" y="462.0"></text>
</g>
<g>
<title>G1PrepareEvacuationTask::G1PrepareRegionsClosure::do_heap_region(HeapRegion*) (1 samples, 0.05%)</title><rect x="1185.4" y="435.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.4" y="446.0"></text>
</g>
<g>
<title>G1RemSet::prepare_region_for_scan(HeapRegion*) (1 samples, 0.05%)</title><rect x="1185.4" y="419.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.4" y="430.0"></text>
</g>
<g>
<title>G1RebuildFreeListTask::work(unsigned int) (1 samples, 0.05%)</title><rect x="1186.0" y="467.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.0" y="478.0"></text>
</g>
<g>
<title>void WeakProcessor::Task::work&lt;G1STWIsAliveClosure, G1KeepAliveClosure&gt;(unsigned int, G1STWIsAliveClosure*, G1KeepAliveClosure*) (1 samples, 0.05%)</title><rect x="1186.6" y="467.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.6" y="478.0"></text>
</g>
<g>
<title>VMThread::run() (5 samples, 0.24%)</title><rect x="1187.1" y="483.0" width="2.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.1" y="494.0"></text>
</g>
<g>
<title>VMThread::loop() (5 samples, 0.24%)</title><rect x="1187.1" y="467.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.1" y="478.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (1 samples, 0.05%)</title><rect x="1187.1" y="451.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.1" y="462.0"></text>
</g>
<g>
<title>SafepointSynchronize::synchronize_threads(long, int, int*) (1 samples, 0.05%)</title><rect x="1187.1" y="435.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.1" y="446.0"></text>
</g>
<g>
<title>ThreadSafepointState::examine_state_of_thread(unsigned long) (1 samples, 0.05%)</title><rect x="1187.1" y="419.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.1" y="430.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.0] (4 samples, 0.19%)</title><rect x="1187.7" y="451.0" width="2.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.7" y="462.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (4 samples, 0.19%)</title><rect x="1187.7" y="435.0" width="2.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.7" y="446.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (4 samples, 0.19%)</title><rect x="1187.7" y="419.0" width="2.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.7" y="430.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (4 samples, 0.19%)</title><rect x="1187.7" y="403.0" width="2.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.7" y="414.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint_helper(double) (4 samples, 0.19%)</title><rect x="1187.7" y="387.0" width="2.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.7" y="398.0"></text>
</g>
<g>
<title>G1CollectedHeap::gc_prologue(bool) (1 samples, 0.05%)</title><rect x="1187.7" y="371.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.7" y="382.0"></text>
</g>
<g>
<title>CollectedHeap::ensure_parsability(bool) (1 samples, 0.05%)</title><rect x="1187.7" y="355.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.7" y="366.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::retire(ThreadLocalAllocStats*) (1 samples, 0.05%)</title><rect x="1187.7" y="339.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.7" y="350.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::accumulate_and_reset_statistics(ThreadLocalAllocStats*) (1 samples, 0.05%)</title><rect x="1187.7" y="323.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.7" y="334.0"></text>
</g>
<g>
<title>G1GCPhaseTimes::reset() (1 samples, 0.05%)</title><rect x="1188.3" y="371.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.3" y="382.0"></text>
</g>
<g>
<title>G1HeapTransition::Data::Data(G1CollectedHeap*) (1 samples, 0.05%)</title><rect x="1188.9" y="371.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.9" y="382.0"></text>
</g>
<g>
<title>metaspace::MetaspaceSizesSnapshot::MetaspaceSizesSnapshot() (1 samples, 0.05%)</title><rect x="1188.9" y="355.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.9" y="366.0"></text>
</g>
<g>
<title>G1MonitoringScope::G1MonitoringScope(G1MonitoringSupport*, bool, bool) (1 samples, 0.05%)</title><rect x="1189.4" y="371.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.4" y="382.0"></text>
</g>
<g>
<title>TraceMemoryManagerStats::TraceMemoryManagerStats(GCMemoryManager*, GCCause::Cause, bool, bool, bool, bool, bool, bool, bool, bool) (1 samples, 0.05%)</title><rect x="1189.4" y="355.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.4" y="366.0"></text>
</g>
<g>
<title>GCMemoryManager::gc_begin(bool, bool, bool) (1 samples, 0.05%)</title><rect x="1189.4" y="339.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.4" y="350.0"></text>
</g>
<g>
<title>CodeHeap::allocated_capacity() const (1 samples, 0.05%)</title><rect x="1189.4" y="323.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.4" y="334.0"></text>
</g>
</g>
</svg>
