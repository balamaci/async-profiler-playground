<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="597"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="597"> </text>
<g id="frames">
<g>
<title>all (12 samples, 100.00%)</title><rect x="10.0" y="563.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="574.0">all</text>
</g>
<g>
<title>[C2 CompilerThre tid=17] (3 samples, 25.00%)</title><rect x="10.0" y="547.0" width="295.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="558.0">[C2 CompilerThre tid=17]</text>
</g>
<g>
<title>start_thread (3 samples, 25.00%)</title><rect x="10.0" y="531.0" width="295.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="542.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 25.00%)</title><rect x="10.0" y="515.0" width="295.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="526.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (3 samples, 25.00%)</title><rect x="10.0" y="499.0" width="295.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="510.0">Thread::call_run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (3 samples, 25.00%)</title><rect x="10.0" y="483.0" width="295.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="494.0">JavaThread::thread_main_inner()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (3 samples, 25.00%)</title><rect x="10.0" y="467.0" width="295.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="478.0">CompileBroker::compiler_thread_loop()</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (3 samples, 25.00%)</title><rect x="10.0" y="451.0" width="295.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="462.0">CompileBroker::invoke_compiler_on_method..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (3 samples, 25.00%)</title><rect x="10.0" y="435.0" width="295.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="446.0">C2Compiler::compile_method(ciEnv*, ciMet..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (3 samples, 25.00%)</title><rect x="10.0" y="419.0" width="295.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.0" y="430.0">Compile::Compile(ciEnv*, ciMethod*, int,..</text>
</g>
<g>
<title>Compile::Code_Gen() (2 samples, 16.67%)</title><rect x="10.0" y="403.0" width="196.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.0" y="414.0">Compile::Code_Gen()</text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 8.33%)</title><rect x="10.0" y="387.0" width="98.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="398.0">PhaseCFG::do..</text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 8.33%)</title><rect x="10.0" y="371.0" width="98.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="382.0">PhaseCFG::gl..</text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 8.33%)</title><rect x="10.0" y="355.0" width="98.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="366.0">PhaseChaitin..</text>
</g>
<g>
<title>PhaseOutput::fill_buffer(CodeBuffer*, unsigned int*) (1 samples, 8.33%)</title><rect x="108.3" y="387.0" width="98.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="111.3" y="398.0">PhaseOutput:..</text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (1 samples, 8.33%)</title><rect x="108.3" y="371.0" width="98.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="111.3" y="382.0">NonSafepoint..</text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 8.33%)</title><rect x="108.3" y="355.0" width="98.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="111.3" y="366.0">DebugInforma..</text>
</g>
<g>
<title>ValueRecorder&lt;Metadata*&gt;::maybe_find_index(Metadata*) (1 samples, 8.33%)</title><rect x="108.3" y="339.0" width="98.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="111.3" y="350.0">ValueRecorde..</text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 8.33%)</title><rect x="206.7" y="403.0" width="98.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="209.7" y="414.0">ParseGenerat..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 8.33%)</title><rect x="206.7" y="387.0" width="98.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="209.7" y="398.0">Parse::Parse..</text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 8.33%)</title><rect x="206.7" y="371.0" width="98.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="209.7" y="382.0">Parse::do_al..</text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 8.33%)</title><rect x="206.7" y="355.0" width="98.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="209.7" y="366.0">Parse::do_on..</text>
</g>
<g>
<title>Parse::do_call() (1 samples, 8.33%)</title><rect x="206.7" y="339.0" width="98.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="209.7" y="350.0">Parse::do_ca..</text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 8.33%)</title><rect x="206.7" y="323.0" width="98.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="209.7" y="334.0">ParseGenerat..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 8.33%)</title><rect x="206.7" y="307.0" width="98.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="209.7" y="318.0">Parse::Parse..</text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 8.33%)</title><rect x="206.7" y="291.0" width="98.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="209.7" y="302.0">Parse::do_al..</text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 8.33%)</title><rect x="206.7" y="275.0" width="98.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="209.7" y="286.0">Parse::do_on..</text>
</g>
<g>
<title>Parse::do_call() (1 samples, 8.33%)</title><rect x="206.7" y="259.0" width="98.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="209.7" y="270.0">Parse::do_ca..</text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (1 samples, 8.33%)</title><rect x="206.7" y="243.0" width="98.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="209.7" y="254.0">GraphKit::ki..</text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 8.33%)</title><rect x="206.7" y="227.0" width="98.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="209.7" y="238.0">ciMethod::li..</text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (1 samples, 8.33%)</title><rect x="206.7" y="211.0" width="98.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="209.7" y="222.0">MethodLivene..</text>
</g>
<g>
<title>[Thread-0 tid=23] (7 samples, 58.33%)</title><rect x="305.0" y="547.0" width="688.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="308.0" y="558.0">[Thread-0 tid=23]</text>
</g>
<g>
<title>com/balamaci/net/Server$ClientHandler.run (7 samples, 58.33%)</title><rect x="305.0" y="531.0" width="688.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="308.0" y="542.0">com/balamaci/net/Server$ClientHandler.run</text>
</g>
<g>
<title>java/io/DataInputStream.readUTF (5 samples, 41.67%)</title><rect x="305.0" y="515.0" width="491.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="308.0" y="526.0">java/io/DataInputStream.readUTF</text>
</g>
<g>
<title>java/io/DataInputStream.readUTF (5 samples, 41.67%)</title><rect x="305.0" y="499.0" width="491.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="308.0" y="510.0">java/io/DataInputStream.readUTF</text>
</g>
<g>
<title>java/io/DataInputStream.readUnsignedShort (5 samples, 41.67%)</title><rect x="305.0" y="483.0" width="491.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="308.0" y="494.0">java/io/DataInputStream.readUnsignedShort</text>
</g>
<g>
<title>java/net/Socket$SocketInputStream.read (5 samples, 41.67%)</title><rect x="305.0" y="467.0" width="491.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="308.0" y="478.0">java/net/Socket$SocketInputStream.read</text>
</g>
<g>
<title>java/net/Socket$SocketInputStream.read (5 samples, 41.67%)</title><rect x="305.0" y="451.0" width="491.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="308.0" y="462.0">java/net/Socket$SocketInputStream.read</text>
</g>
<g>
<title>sun/nio/ch/NioSocketImpl$1.read (5 samples, 41.67%)</title><rect x="305.0" y="435.0" width="491.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="308.0" y="446.0">sun/nio/ch/NioSocketImpl$1.read</text>
</g>
<g>
<title>sun/nio/ch/NioSocketImpl.read (5 samples, 41.67%)</title><rect x="305.0" y="419.0" width="491.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="308.0" y="430.0">sun/nio/ch/NioSocketImpl.read</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 8.33%)</title><rect x="305.0" y="403.0" width="98.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="308.0" y="414.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.lock (1 samples, 8.33%)</title><rect x="305.0" y="387.0" width="98.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="308.0" y="398.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.initialTryLock (1 samples, 8.33%)</title><rect x="305.0" y="371.0" width="98.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="308.0" y="382.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 8.33%)</title><rect x="305.0" y="355.0" width="98.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="308.0" y="366.0">java/util/co..</text>
</g>
<g>
<title>sun/nio/ch/NioSocketImpl.implRead (4 samples, 33.33%)</title><rect x="403.3" y="403.0" width="393.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="406.3" y="414.0">sun/nio/ch/NioSocketImpl.implRead</text>
</g>
<g>
<title>sun/nio/ch/NioSocketImpl.tryRead (4 samples, 33.33%)</title><rect x="403.3" y="387.0" width="393.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="406.3" y="398.0">sun/nio/ch/NioSocketImpl.tryRead</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (4 samples, 33.33%)</title><rect x="403.3" y="371.0" width="393.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="406.3" y="382.0">sun/nio/ch/SocketDispatcher.read</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read0 (4 samples, 33.33%)</title><rect x="403.3" y="355.0" width="393.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="406.3" y="366.0">sun/nio/ch/SocketDispatcher.read0</text>
</g>
<g>
<title>read (4 samples, 33.33%)</title><rect x="403.3" y="339.0" width="393.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="406.3" y="350.0">read</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 33.33%)</title><rect x="403.3" y="323.0" width="393.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="406.3" y="334.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (4 samples, 33.33%)</title><rect x="403.3" y="307.0" width="393.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="406.3" y="318.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_read (4 samples, 33.33%)</title><rect x="403.3" y="291.0" width="393.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="406.3" y="302.0">__x64_sys_read</text>
</g>
<g>
<title>ksys_read (4 samples, 33.33%)</title><rect x="403.3" y="275.0" width="393.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="406.3" y="286.0">ksys_read</text>
</g>
<g>
<title>vfs_read (4 samples, 33.33%)</title><rect x="403.3" y="259.0" width="393.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="406.3" y="270.0">vfs_read</text>
</g>
<g>
<title>__vfs_read (4 samples, 33.33%)</title><rect x="403.3" y="243.0" width="393.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="406.3" y="254.0">__vfs_read</text>
</g>
<g>
<title>new_sync_read (4 samples, 33.33%)</title><rect x="403.3" y="227.0" width="393.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="406.3" y="238.0">new_sync_read</text>
</g>
<g>
<title>sock_read_iter (4 samples, 33.33%)</title><rect x="403.3" y="211.0" width="393.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="406.3" y="222.0">sock_read_iter</text>
</g>
<g>
<title>sock_recvmsg (4 samples, 33.33%)</title><rect x="403.3" y="195.0" width="393.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="406.3" y="206.0">sock_recvmsg</text>
</g>
<g>
<title>inet6_recvmsg (4 samples, 33.33%)</title><rect x="403.3" y="179.0" width="393.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="406.3" y="190.0">inet6_recvmsg</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 8.33%)</title><rect x="403.3" y="163.0" width="98.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="406.3" y="174.0">lock_sock_ne..</text>
</g>
<g>
<title>tcp_recvmsg (3 samples, 25.00%)</title><rect x="501.7" y="163.0" width="295.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="504.7" y="174.0">tcp_recvmsg</text>
</g>
<g>
<title>sk_wait_data (1 samples, 8.33%)</title><rect x="600.0" y="147.0" width="98.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="603.0" y="158.0">sk_wait_data</text>
</g>
<g>
<title>wait_woken (1 samples, 8.33%)</title><rect x="600.0" y="131.0" width="98.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="603.0" y="142.0">wait_woken</text>
</g>
<g>
<title>schedule_timeout (1 samples, 8.33%)</title><rect x="600.0" y="115.0" width="98.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="603.0" y="126.0">schedule_tim..</text>
</g>
<g>
<title>schedule (1 samples, 8.33%)</title><rect x="600.0" y="99.0" width="98.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="603.0" y="110.0">schedule</text>
</g>
<g>
<title>__sched_text_start (1 samples, 8.33%)</title><rect x="600.0" y="83.0" width="98.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="603.0" y="94.0">__sched_text..</text>
</g>
<g>
<title>finish_task_switch (1 samples, 8.33%)</title><rect x="600.0" y="67.0" width="98.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="603.0" y="78.0">finish_task_..</text>
</g>
<g>
<title>wait_woken (1 samples, 8.33%)</title><rect x="698.3" y="147.0" width="98.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="701.3" y="158.0">wait_woken</text>
</g>
<g>
<title>java/io/DataOutputStream.writeUTF (2 samples, 16.67%)</title><rect x="796.7" y="515.0" width="196.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="799.7" y="526.0">java/io/DataOutputStream.w..</text>
</g>
<g>
<title>java/io/DataOutputStream.writeUTF (2 samples, 16.67%)</title><rect x="796.7" y="499.0" width="196.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="799.7" y="510.0">java/io/DataOutputStream.w..</text>
</g>
<g>
<title>java/io/DataOutputStream.write (2 samples, 16.67%)</title><rect x="796.7" y="483.0" width="196.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="799.7" y="494.0">java/io/DataOutputStream.w..</text>
</g>
<g>
<title>java/net/Socket$SocketOutputStream.write (2 samples, 16.67%)</title><rect x="796.7" y="467.0" width="196.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="799.7" y="478.0">java/net/Socket$SocketOutp..</text>
</g>
<g>
<title>sun/nio/ch/NioSocketImpl$2.write (2 samples, 16.67%)</title><rect x="796.7" y="451.0" width="196.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="799.7" y="462.0">sun/nio/ch/NioSocketImpl$2..</text>
</g>
<g>
<title>sun/nio/ch/NioSocketImpl.write (2 samples, 16.67%)</title><rect x="796.7" y="435.0" width="196.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="799.7" y="446.0">sun/nio/ch/NioSocketImpl.w..</text>
</g>
<g>
<title>sun/nio/ch/NioSocketImpl.implWrite (2 samples, 16.67%)</title><rect x="796.7" y="419.0" width="196.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="799.7" y="430.0">sun/nio/ch/NioSocketImpl.i..</text>
</g>
<g>
<title>sun/nio/ch/NioSocketImpl.tryWrite (2 samples, 16.67%)</title><rect x="796.7" y="403.0" width="196.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="799.7" y="414.0">sun/nio/ch/NioSocketImpl.t..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (2 samples, 16.67%)</title><rect x="796.7" y="387.0" width="196.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="799.7" y="398.0">sun/nio/ch/SocketDispatche..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (2 samples, 16.67%)</title><rect x="796.7" y="371.0" width="196.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="799.7" y="382.0">sun/nio/ch/FileDispatcherI..</text>
</g>
<g>
<title>__write (2 samples, 16.67%)</title><rect x="796.7" y="355.0" width="196.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="799.7" y="366.0">__write</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 16.67%)</title><rect x="796.7" y="339.0" width="196.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="799.7" y="350.0">entry_SYSCALL_64_after_hwf..</text>
</g>
<g>
<title>do_syscall_64 (2 samples, 16.67%)</title><rect x="796.7" y="323.0" width="196.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="799.7" y="334.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_write (2 samples, 16.67%)</title><rect x="796.7" y="307.0" width="196.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="799.7" y="318.0">__x64_sys_write</text>
</g>
<g>
<title>ksys_write (2 samples, 16.67%)</title><rect x="796.7" y="291.0" width="196.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="799.7" y="302.0">ksys_write</text>
</g>
<g>
<title>vfs_write (2 samples, 16.67%)</title><rect x="796.7" y="275.0" width="196.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="799.7" y="286.0">vfs_write</text>
</g>
<g>
<title>__vfs_write (2 samples, 16.67%)</title><rect x="796.7" y="259.0" width="196.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="799.7" y="270.0">__vfs_write</text>
</g>
<g>
<title>new_sync_write (2 samples, 16.67%)</title><rect x="796.7" y="243.0" width="196.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="799.7" y="254.0">new_sync_write</text>
</g>
<g>
<title>sock_write_iter (2 samples, 16.67%)</title><rect x="796.7" y="227.0" width="196.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="799.7" y="238.0">sock_write_iter</text>
</g>
<g>
<title>sock_sendmsg (2 samples, 16.67%)</title><rect x="796.7" y="211.0" width="196.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="799.7" y="222.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (2 samples, 16.67%)</title><rect x="796.7" y="195.0" width="196.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="799.7" y="206.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 16.67%)</title><rect x="796.7" y="179.0" width="196.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="799.7" y="190.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg_locked (2 samples, 16.67%)</title><rect x="796.7" y="163.0" width="196.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="799.7" y="174.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>tcp_push (2 samples, 16.67%)</title><rect x="796.7" y="147.0" width="196.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="799.7" y="158.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 16.67%)</title><rect x="796.7" y="131.0" width="196.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="799.7" y="142.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 16.67%)</title><rect x="796.7" y="115.0" width="196.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="799.7" y="126.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 16.67%)</title><rect x="796.7" y="99.0" width="196.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="799.7" y="110.0">__tcp_transmit_skb</text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 8.33%)</title><rect x="895.0" y="83.0" width="98.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="898.0" y="94.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 8.33%)</title><rect x="895.0" y="67.0" width="98.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="898.0" y="78.0">__ip_queue_x..</text>
</g>
<g>
<title>ip_local_out (1 samples, 8.33%)</title><rect x="895.0" y="51.0" width="98.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="898.0" y="62.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (1 samples, 8.33%)</title><rect x="895.0" y="35.0" width="98.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="898.0" y="46.0">__ip_local_out</text>
</g>
<g>
<title>[VM Periodic Tas tid=21] (2 samples, 16.67%)</title><rect x="993.3" y="547.0" width="196.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="996.3" y="558.0">[VM Periodic Tas tid=21]</text>
</g>
<g>
<title>[unknown] (1 samples, 8.33%)</title><rect x="993.3" y="531.0" width="98.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="996.3" y="542.0">[unknown]</text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (1 samples, 8.33%)</title><rect x="993.3" y="515.0" width="98.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="996.3" y="526.0">pthread_cond..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 8.33%)</title><rect x="993.3" y="499.0" width="98.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="996.3" y="510.0">entry_SYSCAL..</text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 8.33%)</title><rect x="993.3" y="483.0" width="98.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="996.3" y="494.0">__x64_sys_fu..</text>
</g>
<g>
<title>start_thread (1 samples, 8.33%)</title><rect x="1091.7" y="531.0" width="98.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1094.7" y="542.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 8.33%)</title><rect x="1091.7" y="515.0" width="98.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1094.7" y="526.0">thread_nativ..</text>
</g>
<g>
<title>Thread::call_run() (1 samples, 8.33%)</title><rect x="1091.7" y="499.0" width="98.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1094.7" y="510.0">Thread::call..</text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 8.33%)</title><rect x="1091.7" y="483.0" width="98.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1094.7" y="494.0">WatcherThrea..</text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (1 samples, 8.33%)</title><rect x="1091.7" y="467.0" width="98.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1094.7" y="478.0">PeriodicTask..</text>
</g>
</g>
</svg>
